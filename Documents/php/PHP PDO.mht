From: <Saved by UnMHT Ver.6.3.3>
Subject: PHP Tutorials Examples Introduction to PHP PDO
Date: Wed, 03 Jul 2013 13:02:30 +0300
MIME-Version: 1.0
Content-Type: multipart/related;
	boundary="----=_Part_38EB0EE_729951D.1372845750840";
	type="text/html"

------=_Part_38EB0EE_729951D.1372845750840
Content-Location: http://www.phpro.org/tutorials/Introduction-to-PHP-PDO.html
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset="UTF-8"

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.=
w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml"><head><meta http-equiv=3D"Cont=
ent-Type" content=3D"text/html; charset=3DUTF-8">

<meta content=3D"+J21X+3KbH1F9F9+Sel4Pab3hJlNw7mdm85lPLFeHVU=3D" name=3D"ve=
rify-v1">
<meta content=3D"en" http-equiv=3D"Content-Language">
<meta content=3D"en,sa" http-equiv=3D"Content-Language">
<title>PHP Tutorials Examples Introduction to PHP PDO</title>

<link href=3D"http://www.phpro.org/rss/all.rss" title=3D"RSS" type=3D"appli=
cation/rss+xml" rel=3D"alternate">
<link type=3D"text/css" rel=3D"stylesheet" href=3D"/css/style.css">
<link type=3D"image/x-icon" href=3D"/favicon.ico" rel=3D"shortcut icon">=20
<style charset=3D"utf-8" type=3D"text/css">/* See license.txt for terms of=
 usage */
/** reset styling **/
.firebugResetStyles {
    z-index: 2147483646 !important;
    top: 0 !important;
    left: 0 !important;
    display: block !important;
    border: 0 none !important;
    margin: 0 !important;
    padding: 0 !important;
    outline: 0 !important;
    min-width: 0 !important;
    max-width: none !important;
    min-height: 0 !important;
    max-height: none !important;
    position: fixed !important;
    transform: rotate(0deg) !important;
    transform-origin: 50% 50% !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    background: transparent none !important;
    pointer-events: none !important;
    white-space: normal !important;
}

.firebugBlockBackgroundColor {
    background-color: transparent !important;
}

.firebugResetStyles:before, .firebugResetStyles:after {
    content: "" !important;
}
/**actual styling to be modified by firebug theme**/
.firebugCanvas {
    display: none !important;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *=
 * * * * * * * * * * * */
.firebugLayoutBox {
    width: auto !important;
    position: static !important;
}

.firebugLayoutBoxOffset {
    opacity: 0.8 !important;
    position: fixed !important;
}

.firebugLayoutLine {
    opacity: 0.4 !important;
    background-color: #000000 !important;
}

.firebugLayoutLineLeft, .firebugLayoutLineRight {
    width: 1px !important;
    height: 100% !important;
}

.firebugLayoutLineTop, .firebugLayoutLineBottom {
    width: 100% !important;
    height: 1px !important;
}

.firebugLayoutLineTop {
    margin-top: -1px !important;
    border-top: 1px solid #999999 !important;
}

.firebugLayoutLineRight {
    border-right: 1px solid #999999 !important;
}

.firebugLayoutLineBottom {
    border-bottom: 1px solid #999999 !important;
}

.firebugLayoutLineLeft {
    margin-left: -1px !important;
    border-left: 1px solid #999999 !important;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *=
 * * * * * * * * * * * */
.firebugLayoutBoxParent {
    border-top: 0 none !important;
    border-right: 1px dashed #E00 !important;
    border-bottom: 1px dashed #E00 !important;
    border-left: 0 none !important;
    position: fixed !important;
    width: auto !important;
}

.firebugRuler{
    position: absolute !important;
}

.firebugRulerH {
    top: -15px !important;
    left: 0 !important;
    width: 100% !important;
    height: 14px !important;
    background: url("data:image/png,%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%0=
0%13%88%00%00%00%0E%08%02%00%00%00L%25a%0A%00%00%00%04gAMA%00%00%D6%D8%D4OX=
2%00%00%00%19tEXtSoftware%00Adobe%20ImageReadyq%C9e%3C%00%00%04%F8IDATx%DA%=
EC%DD%D1n%E2%3A%00E%D1%80%F8%FF%EF%E2%AF2%95%D0D4%0E%C1%14%B0%8Fa-%E9%3E%CC=
%9C%87n%B9%81%A6W0%1C%A6i%9A%E7y%0As8%1CT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT=
%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5=
J%95*U%AATE9%FE%FCw%3E%9F%AF%2B%2F%BA%97%FDT%1D~K(%5C%9D%D5%EA%1B%5C%86%B5%=
A9%BDU%B5y%80%ED%AB*%03%FAV9%AB%E1%CEj%E7%82%EF%FB%18%BC%AEJ8%AB%FA'%D2%BEU=
9%D7U%ECc0%E1%A2r%5DynwVi%CFW%7F%BB%17%7Dy%EACU%CD%0E%F0%FA%3BX%FEbV%FEM%9B=
%2B%AD%BE%AA%E5%95v%AB%AA%E3E5%DCu%15rV9%07%B5%7F%B5w%FCm%BA%BE%AA%FBY%3D%1=
4%F0%EE%C7%60%0EU%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9=
R%A5J%95*U%AAT%A9R%A5JU%88%D3%F5%1F%AE%DF%3B%1B%F2%3E%DAUCNa%F92%D02%AC%7Dm=
%F9%3A%D4%F2%8B6%AE*%BF%5C%C2Ym~9g5%D0Y%95%17%7C%C8c%B0%7C%18%26%9CU%CD%13i=
%F7%AA%90%B3Z%7D%95%B4%C7%60%E6E%B5%BC%05%B4%FBY%95U%9E%DB%FD%1C%FC%E0%9F%8=
3%7F%BE%17%7DkjMU%E3%03%AC%7CWj%DF%83%9An%BCG%AE%F1%95%96yQ%0Dq%5Dy%00%3Et%=
B5'%FC6%5DS%95pV%95%01%81%FF'%07%00%00%00%00%00%00%00%00%00%F8x%C7%F0%BE%9C=
Op%5D%C9%7C%AD%E7%E6%EBV%FB%1E%E0(%07%E5%AC%C6%3A%ABi%9C%8F%C6%0E9%AB%C0'%D=
2%8E%9F%F99%D0E%B5%99%14%F5%0D%CD%7F%24%C6%DEH%B8%E9rV%DFs%DB%D0%F7%00k%FE%=
1D%84%84%83J%B8%E3%BA%FB%EF%20%84%1C%D7%AD%B0%8E%D7U%C8Y%05%1E%D4t%EF%AD%95=
Q%BF8w%BF%E9%0A%BF%EB%03%00%00%00%00%00%00%00%00%00%B8vJ%8E%BB%F5%B1u%8Cx%8=
0%E1o%5E%CA9%AB%CB%CB%8E%03%DF%1D%B7T%25%9C%D5(%EFJM8%AB%CC'%D2%B2*%A4s%E7c=
6%FB%3E%FA%A2%1E%80~%0E%3E%DA%10x%5D%95Uig%15u%15%ED%7C%14%B6%87%A1%3B%FCo8=
%A8%D8o%D3%ADO%01%EDx%83%1A~%1B%9FpP%A3%DC%C6'%9C%95gK%00%00%00%00%00%00%00=
%00%00%20%D9%C9%11%D0%C0%40%AF%3F%EE%EE%92%94%D6%16X%B5%BCMH%15%2F%BF%D4%A7=
%C87%F1%8E%F2%81%AE%AAvzr%DA2%ABV%17%7C%E63%83%E7I%DC%C6%0Bs%1B%EF6%1E%00%0=
0%00%00%00%00%00%00%00%80cr%9CW%FF%7F%C6%01%0E%F1%CE%A5%84%B3%CA%BC%E0%CB%A=
A%84%CE%F9%BF)%EC%13%08WU%AE%AB%B1%AE%2BO%EC%8E%CBYe%FE%8CN%ABr%5Dy%60~%CFA=
%0D%F4%AE%D4%BE%C75%CA%EDVB%EA(%B7%F1%09g%E5%D9%12%00%00%00%00%00%00%00%00%=
00H%F6%EB%13S%E7y%5E%5E%FB%98%F0%22%D1%B2'%A7%F0%92%B1%BC%24z3%AC%7Dm%60%D5=
%92%B4%7CEUO%5E%F0%AA*%3BU%B9%AE%3E%A0j%94%07%A0%C7%A0%AB%FD%B5%3F%A0%F7%03=
T%3Dy%D7%F7%D6%D4%C0%AAU%D2%E6%DFt%3F%A8%CC%AA%F2%86%B9%D7%F5%1F%18%E6%01%F=
8%CC%D5%9E%F0%F3z%88%AA%90%EF%20%00%00%00%00%00%00%00%00%00%C0%A6%D3%EA%CFi=
%AFb%2C%7BB%0A%2B%C3%1A%D7%06V%D5%07%A8r%5D%3D%D9%A6%CAu%F5%25%CF%A2%99%97z=
NX%60%95%AB%5DUZ%D5%FBR%03%AB%1C%D4k%9F%3F%BB%5C%FF%81a%AE%AB'%7F%F3%EA%FE%=
F3z%94%AA%D8%DF%5B%01%00%00%00%00%00%00%00%00%00%8E%FB%F3%F2%B1%1B%8DWU%AAT=
%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5=
J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*UiU%C7%BBe%E7%F3%B9%CB%AAJ%95*U%AAT%=
A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5J=
%95*U%AAT%A9R%A5J%95*U%AAT%A9R%A5*%AAj%FD%C6%D4%5Eo%90%B5Z%ADV%AB%D5j%B5Z%A=
DV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%A=
DV%AB%D5j%B5%86%AF%1B%9F%98%DA%EBm%BBV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j=
%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%ADV%AB%D5j%B5Z%AD%D6%E4%F=
58%01%00%00%00%00%00%00%00%00%00%00%00%00%00%40%85%7F%02%0C%008%C2%D0H%16j%=
8FX%00%00%00%00IEND%AEB%60%82") repeat-x !important;
    border-top: 1px solid #BBBBBB !important;
    border-right: 1px dashed #BBBBBB !important;
    border-bottom: 1px solid #000000 !important;
}

.firebugRulerV {
    top: 0 !important;
    left: -15px !important;
    width: 14px !important;
    height: 100% !important;
    background: url("data:image/png,%89PNG%0D%0A%1A%0A%00%00%00%0DIHDR%00%0=
0%00%0E%00%00%13%88%08%02%00%00%00%0E%F5%CB%10%00%00%00%04gAMA%00%00%D6%D8%=
D4OX2%00%00%00%19tEXtSoftware%00Adobe%20ImageReadyq%C9e%3C%00%00%06~IDATx%D=
A%EC%DD%D1v%A20%14%40Qt%F1%FF%FF%E4%97%D9%07%3BT%19%92%DC%40(%90%EEy%9A5%CB=
%B6%E8%F6%9Ac%A4%CC0%84%FF%DC%9E%CF%E7%E3%F1%88%DE4%F8%5D%C7%9F%2F%BA%DD%5E=
%7FI%7D%F18%DDn%BA%C5%FB%DF%97%BFk%F2%10%FF%FD%B4%F2M%A7%FB%FD%FD%B3%22%07p=
%8F%3F%AE%E3%F4S%8A%8F%40%EEq%9D%BE8D%F0%0EY%A1Uq%B7%EA%1F%81%88V%E8X%3F%B4=
%CEy%B7h%D1%A2E%EBohU%FC%D9%AF2fO%8BBeD%BE%F7X%0C%97%A4%D6b7%2Ck%A5%12%E3%9=
B%60v%B7r%C7%1AI%8C%BD%2B%23r%00c0%B2v%9B%AD%CA%26%0C%1Ek%05A%FD%93%D0%2B%A=
1u%8B%16-%95q%5Ce%DCSO%8E%E4M%23%8B%F7%C2%FE%40%BB%BD%8C%FC%8A%B5V%EBu%40%F=
9%3B%A72%FA%AE%8C%D4%01%CC%B5%DA%13%9CB%AB%E2I%18%24%B0n%A9%0CZ*Ce%9C%A22%8=
E%D8NJ%1E%EB%FF%8F%AE%CAP%19*%C3%BAEKe%AC%D1%AAX%8C*%DEH%8F%C5W%A1e%AD%D4%B=
7%5C%5B%19%C5%DB%0D%EF%9F%19%1D%7B%5E%86%BD%0C%95%A12%AC%5B*%83%96%CAP%19%F=
62T%86%CAP%19*%83%96%CA%B8Xe%BC%FE)T%19%A1%17xg%7F%DA%CBP%19*%C3%BA%A52T%86=
%CAP%19%F62T%86%CA%B0n%A9%0CZ%1DV%C6%3D%F3%FCH%DE%B4%B8~%7F%5CZc%F1%D6%1F%A=
F%84%F9%0F6%E6%EBVt9%0E~%BEr%AF%23%B0%97%A12T%86%CAP%19%B4T%86%CA%B8Re%D8%C=
BP%19*%C3%BA%A52huX%19%AE%CA%E5%BC%0C%7B%19*CeX%B7h%A9%0C%95%E1%BC%0C%7B%19=
*CeX%B7T%06%AD%CB%5E%95%2B%BF.%8F%C5%97%D5%E4%7B%EE%82%D6%FB%CF-%9C%FD%B9%C=
F%3By%7B%19%F62T%86%CA%B0n%D1R%19*%A3%D3%CA%B0%97%A12T%86uKe%D0%EA%B02*%3F1=
%99%5DB%2B%A4%B5%F8%3A%7C%BA%2B%8Co%7D%5C%EDe%A8%0C%95a%DDR%19%B4T%C66%82fA=
%B2%ED%DA%9FC%FC%17GZ%06%C9%E1%B3%E5%2C%1A%9FoiB%EB%96%CA%A0%D5qe4%7B%7D%FD=
%85%F7%5B%ED_%E0s%07%F0k%951%ECr%0D%B5C%D7-g%D1%A8%0C%EB%96%CA%A0%A52T%C6)*=
%C3%5E%86%CAP%19%D6-%95A%EB*%95q%F8%BB%E3%F9%AB%F6%E21%ACZ%B7%22%B7%9B%3F%0=
2%85%CB%A2%5B%B7%BA%5E%B7%9C%97%E1%BC%0C%EB%16-%95%A12z%AC%0C%BFc%A22T%86uK=
e%D0%EA%B02V%DD%AD%8A%2B%8CWhe%5E%AF%CF%F5%3B%26%CE%CBh%5C%19%CE%CB%B0%F3%A=
4%095%A1%CAP%19*Ce%A8%0C%3BO*Ce%A8%0C%95%A12%3A%AD%8C%0A%82%7B%F0v%1F%2FD%A=
9%5B%9F%EE%EA%26%AF%03%CA%DF9%7B%19*Ce%A8%0C%95%A12T%86%CA%B8Ze%D8%CBP%19*C=
e%A8%0C%95%D1ae%EC%F7%89I%E1%B4%D7M%D7P%8BjU%5C%BB%3E%F2%20%D8%CBP%19*Ce%A8=
%0C%95%A12T%C6%D5*%C3%5E%86%CAP%19*Ce%B4O%07%7B%F0W%7Bw%1C%7C%1A%8C%B3%3B%D=
1%EE%AA%5C%D6-%EBV%83%80%5E%D0%CA%10%5CU%2BD%E07YU%86%CAP%19*%E3%9A%95%91%D=
9%A0%C8%AD%5B%EDv%9E%82%FFKOee%E4%8FUe%A8%0C%95%A12T%C6%1F%A9%8C%C8%3D%5B%A=
5%15%FD%14%22r%E7B%9F%17l%F8%BF%ED%EAf%2B%7F%CF%ECe%D8%CBP%19*Ce%A8%0C%95%E=
1%93~%7B%19%F62T%86%CAP%19*Ce%A8%0C%E7%13%DA%CBP%19*Ce%A8%0CZf%8B%16-Z%B4h%=
D1R%19f%8B%16-Z%B4h%D1R%19%B4%CC%16-Z%B4h%D1R%19%B4%CC%16-Z%B4h%D1%A2%A52%C=
C%16-Z%B4h%D1%A2%A52h%99-Z%B4h%D1%A2%A52h%99-Z%B4h%D1%A2EKe%98-Z%B4h%D1%A2E=
Ke%D02%5B%B4h%D1%A2EKe%D02%5B%B4h%D1%A2E%8B%96%CA0%5B%B4h%D1%A2E%8B%96%CA%A=
0e%B6h%D1%A2E%8B%96%CA%A0e%B6h%D1%A2E%8B%16-%95a%B6h%D1%A2E%8B%16-%95A%CBl%=
D1%A2E%8B%16-%95A%CBl%D1%A2E%8B%16-Z*%C3l%D1%A2E%8B%16-Z*%83%96%D9%A2E%8B%1=
6-Z*%83%96%D9%A2E%8B%16-Z%B4T%86%D9%A2E%8B%16-Z%B4T%06-%B3E%8B%16-Z%B4T%06-=
%B3E%8B%16-Z%B4h%A9%0C%B3E%8B%16-Z%B4h%A9%0CZf%8B%16-Z%B4h%A9%0CZf%8B%16-Z%=
B4h%D1R%19f%8B%16-Z%B4h%D1R%19%B4%CC%16-Z%B4h%D1R%19%B4%CC%16-Z%B4h%D1%A2%A=
52%CC%16-Z%B4h%D1%A2%A52h%99-Z%B4h%D1%A2%A52h%99-Z%B4h%D1%A2EKe%98-Z%B4h%D1=
%A2EKe%D02%5B%B4h%D1%A2EKe%D02%5B%B4h%D1%A2E%8B%96%CA0%5B%B4h%D1%A2E%8B%96%=
CA%A0e%B6h%D1%A2E%8B%96%CA%A0e%B6h%D1%A2E%8B%16-%95a%B6h%D1%A2E%8B%16-%95A%=
CBl%D1%A2E%8B%16-%95A%CBl%D1%A2E%8B%16-Z*%C3l%D1%A2E%8B%16-Z*%83%96%D9%A2E%=
8B%16-Z*%83%96%D9%A2E%8B%16-Z%B4T%86%D9%A2E%8B%16-Z%B4T%06-%B3E%8B%16-Z%B4T=
%06-%B3E%8B%16-Z%B4h%A9%0C%B3E%8B%16-Z%B4h%A9%0CZf%8B%16-Z%B4h%A9%0CZf%8B%1=
6-Z%B4h%D1R%19f%8B%16-Z%B4h%D1R%19%B4%CC%16-Z%B4h%D1R%19%B4%CC%16-Z%B4h%D1%=
A2%A52%CC%16-Z%B4h%D1%A2%A52h%99-Z%B4h%D1%A2%A52h%99-Z%B4h%D1%A2EKe%98-Z%B4=
h%D1%A2EKe%D02%5B%B4h%D1%A2EKe%D02%5B%B4h%D1%A2E%8B%96%CA0%5B%B4h%D1%A2E%8B=
%96%CA%A0e%B6h%D1%A2E%8B%96%CA%A0e%B6h%D1%A2E%8B%16-%95a%B6h%D1%A2E%8B%16-%=
95A%CBl%D1%A2E%8B%16-%95A%CBl%D1%A2E%8B%16-Z*%C3l%D1%A2E%8B%16-Z*%83%96%D9%=
A2E%8B%16-Z*%83%96%D9%A2E%8B%16-Z%B4T%86%D9%A2E%8B%16-Z%B4T%06-%B3E%8B%16-Z=
%B4%AE%A4%F5%25%C0%00%DE%BF%5C'%0F%DA%B8q%00%00%00%00IEND%AEB%60%82") repea=
t-y !important;
    border-left: 1px solid #BBBBBB !important;
    border-right: 1px solid #000000 !important;
    border-bottom: 1px dashed #BBBBBB !important;
}

.overflowRulerX > .firebugRulerV {
    left: 0 !important;
}

.overflowRulerY > .firebugRulerH {
    top: 0 !important;
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *=
 * * * * * * * * * * * */
.fbProxyElement {
    position: fixed !important;
    pointer-events: auto !important;
}
</style><base href=3D"http://www.phpro.org/tutorials/"></head>

<body>
<!--container starts -->
<div id=3D"container">

<!--login starts -->


<!--login ends -->


<!--navigation starts -->

<div id=3D"navigation">
<ul>
<li><a href=3D"/">Home</a></li>
<li><a href=3D"/tutorials">Tutorials</a></li>
<li><a href=3D"/articles">Articles</a></li>
<li><a href=3D"/examples">Examples</a></li>
<li><a href=3D"/projects">Projects</a></li>
<li><a href=3D"/classes">Classes</a></li>
<li><a href=3D"/manual">Manual</a></li>
<li><a href=3D"/contact">Contact</a></li>
</ul>
</div>

<!--logo starts -->

<!--logo ends -->

<!--info starts -->
<div id=3D"content">
<div id=3D"left">
<!--content starts -->

<div id=3D"left">

<h1>Introduction to PHP PDO</h1>
<h1>Introduction to PHP PDO</h1>
<h2>(PHP Data Objects)</h2>
<div class=3D"signature">by Kevin Waterson</div>
<h2>Contents</h2>
<ol>
<li><a href=3D"#1">What is PDO</a></li>
<li><a href=3D"#2">What Databases does PDO support</a></li>
<li><a href=3D"#3">Where do I begin?</a></li>
<li><a href=3D"#4">Connect to a Database</a>
 <ul>
 <li><a href=3D"#4.1">Connect to PgSQL</a></li>
 <li><a href=3D"#4.2">Connect to SQLite</a></li>
 <li><a href=3D"#4.3">Connect to MySQL</a></li>
 <li><a href=3D"#4.4">Connect to Firebird</a></li>
 <li><a href=3D"#4.5">Connect to Informix</a></li>
 <li><a href=3D"#4.6">Connect to Oracle</a></li>
 <li><a href=3D"#4.7">Connect to  ODBC</a></li>
 <li><a href=3D"#4.8">Connect to DBLIB</a></li>
 <li><a href=3D"#4.9">Connect to IBM</a></li>
</ul>
</li>
<li><a href=3D"#5">There is no five</a></li>
<li><a href=3D"#6">Close a Database Connection</a></li>
<li><a href=3D"#7">Query a Database</a>
 <ul>
 <li><a href=3D"#7.1">INSERT</a></li>
 <li><a href=3D"#7.2">SELECT</a></li>
 <li><a href=3D"#7.3">UPDATE</a></li>
 </ul>
</li>
<li><a href=3D"#8">Fetch Modes</a>
 <ul>
 <li><a href=3D"#8.1">FETCH ASSOC</a></li>
 <li><a href=3D"#8.2">FETCH NUM</a></li>
 <li><a href=3D"#8.3">FETCH BOTH</a></li>
 <li><a href=3D"#8.4">FETCH OBJECT</a></li>
 <li><a href=3D"#8.5">FETCH LAZY</a></li>
 <li><a href=3D"#8.6">FETCH CLASS</a></li>
 <li><a href=3D"#8.7">FETCH INTO</a></li>
 </ul>
</li>
<li><a href=3D"#9">Error Handling</a></li>
<li><a href=3D"#10">Prepared Statements</a></li>
<li><a href=3D"#11">Transactions</a></li>
<li><a href=3D"#12">Get Last Insert ID</a></li>
<li><a href=3D"#13">Global Instance</a></li>
<li><a href=3D"#50">Conclusions</a></li>
</ol>

<a name=3D"1" class=3D"anchor"><h2>What is PDO.</h2></a>
<p>
PDO is a PHP extension to formalise PHP&#x27;s database connections by crea=
ting a uniform
interface. This allows developers to create code which is portable across=
 many databases and platforms.
PDO is _not_ just another abstraction layer like PearDB although PearDB may=
 use PDO as a backend. Those
of you familiar with Perls DBI may find the syntax disturbingly familiar.
</p>
<h3>Note: Your must read the section on <a href=3D"#9">Error Handling</a>=
 to benifit from this tutorial</h3>
<p>
During this tutorial we will be using a database called animals, which, as=
 you might have guessed, is a database of animals, genius! The animals tabl=
e is described here.
</p>
<div class=3D"displaybox">
CREATE TABLE animals (
animal_id   MEDIUMINT(8) NOT NULL AUTO_INCREMENT PRIMARY KEY,<br>
animal_type VARCHAR(25)  NOT NULL,<br>
animal_name VARCHAR(25)  NOT NULL <br>
) ENGINE =3D MYISAM ;<br>
<br>
INSERT INTO `animals` (`animal_id`, `animal_type`, `animal_name`) VALUES<br>
(1, &#x27;kookaburra&#x27;, &#x27;bruce&#x27;),<br>
(2, &#x27;emu&#x27;, &#x27;bruce&#x27;),<br>
(3, &#x27;goanna&#x27;, &#x27;bruce&#x27;),<br>
(4, &#x27;dingo&#x27;, &#x27;bruce&#x27;),<br>
(5, &#x27;kangaroo&#x27;, &#x27;bruce&#x27;),<br>
(6, &#x27;wallaby&#x27;, &#x27;bruce&#x27;),<br>
(7, &#x27;wombat&#x27;, &#x27;bruce&#x27;),<br>
(8, &#x27;koala&#x27;, &#x27;bruce&#x27;);<br>
</div>
<a name=3D"2" class=3D"anchor"><h2>What databases does PDO support?</h2></a>
<p>
PDO supports many of the popular databases as seen on the list below.
</p>
<ul>
<li> DBLIB: FreeTDS / Microsoft SQL Server / Sybase</li>
<li> Firebird (http://firebird.sourceforge.net/): Firebird/Interbase 6</li>
<li> IBM (IBM DB2)</li>
<li> INFORMIX - IBM Informix Dynamic Server</li>
<li> MYSQL (http://www.mysql.com/): MySQL 3.x/4.0</li>
<li> OCI (http://www.oracle.com): Oracle Call Interface</li>
<li> ODBC: ODBC v3 (IBM DB2 and unixODBC)</li>
<li> PGSQL (http://www.postgresql.org/): PostgreSQL</li>
<li> SQLITE (http://sqlite.org/): SQLite 3.x</li>
</ul>

<p>
To see if the PDO driver is available for your database, check phpinfo() an=
d you should have a section named PDO and another pdo_mysql or pdo_sqlite=
 depending on your choice of database. You may also check the available dri=
vers with the static method PDO::getAvailableDrivers().
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<br><span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color:=
 #007700">foreach(</span><span style=3D"color: #0000BB">PDO</span><span sty=
le=3D"color: #007700">::</span><span style=3D"color: #0000BB">getAvailableD=
rivers</span><span style=3D"color: #007700">()&#xa0;as&#xa0;</span><span st=
yle=3D"color: #0000BB">$driver</span><span style=3D"color: #007700">)<br>&#=
xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span=
 style=3D"color: #0000BB">$driver</span><span style=3D"color: #007700">.</s=
pan><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><spa=
n style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span=
 style=3D"color: #0000BB">?&gt;</span>
</span>
</code></div>
<p>
To enable PDO simply configure --enable-pdo and --with-pdo_sqlite --with_pd=
o_mysql or whatever database needs supporting by PDO.
</p>
<p>
Windows users will need to un-comment the appropriate line in php.ini and=
 restart the web server.
</p>

<h2><a name=3D"3" class=3D"anchor">Where do I begin?</a></h2>
<p>
If you are reading this you are more than likely to have connected to a dat=
abase using PHP before using a database specific function such as <a href=
=3D"http://www.php.net/mysql-connect">mysql_connect()</a> or <a href=3D"htt=
p://www.php.net/pg-connect">pg_connect</a> or, for the truely evolved coder=
, SQLite. To use PDO with your database you need to have the correct PDO dr=
iver installed for it. For the SQLite PDO driver you need to configure PHP=
 --with-pdo-sqlite. If you are using a RPM based system there are pdo-sqlit=
e.rpm&#x27;s available. Before we go any further, lets connect to a databas=
e and see what all the fuss is about.
</p>

<h2><a name=3D"4" class=3D"anchor">Connect to a database</a></h2>
<p>
Every interaction with a database begins with a connection. Regardless of=
 the database you use, you must connect first and establish a database hand=
ler. After connecting you your database of choice, much of the PDO methods=
 are similar. This is why PDO is such a powerful and useful tool for PHP.=
 Here we show how to connect to various databases and establish a database=
 handler object that we can use for further interaction with the database.
</p>
<h2><a name=3D"4.1" class=3D"anchor">Connect with PgSQL</a></h2>
<p>
As mentioned above, you may have previously tried to connect to a PgSQL dat=
abase using pg_connect. Here we connect with PDO.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$db&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;pgsql:dbname=3Dpdo;host=3Dloc=
alhost&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span style=
=3D"color: #DD0000">&quot;username&quot;</span><span style=3D"color: #00770=
0">,&#xa0;</span><span style=3D"color: #DD0000">&quot;password&quot;&#xa0;<=
/span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa=
0;</span><span style=3D"color: #DD0000">&quot;PDO&#xa0;connection&#xa0;obje=
ct&#xa0;created&quot;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0=
;&#xa0;&#xa0;}<br>catch(</span><span style=3D"color: #0000BB">PDOException&=
#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{=
<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB"=
>$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>

<p>So that was a bit of a no-brainer to start with, we see the use of &quot=
;new&quot; to create the PDO object followed by the database type username=
 and password. This should be familiar to most people who have connected to=
 a database before using traditional methods.. As we have used try{} and ca=
tch(){} we see upon failure that an exception is thrown with the error mess=
age &quot;could not find driver&quot;. This tells us the PDO_PGSQL driver=
 is not present and needs to be loaded. As noted, an exception is thrown.=
 PDO can handle errors in several ways, more on this later.<br>
How did it connect to the database?<br>
The database connection is handled internally by PDO&#x27;s __construct()=
 and this represents our database connection.
</p>
<p>
Lets see what happens if we try to connect to database as we did above with=
out catching the exception and see what happens..
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br>&#xa0;$db&#xa0;</span><span styl=
e=3D"color: #007700">=3D&#xa0;new&#xa0;</span><span style=3D"color: #0000BB=
">PDO</span><span style=3D"color: #007700">(</span><span style=3D"color: #D=
D0000">&quot;pgsql:dbname=3Dno_database;host=3Dlocalhost&quot;</span><span=
 style=3D"color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&quo=
t;username&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #DD0000">&quot;password&quot;&#xa0;</span><span style=3D"c=
olor: #007700">);<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>
<p>
From the above snippet you will get a result something like this below
</p>
<div class=3D"displaybox">
Fatal error: Uncaught exception &#x27;PDOException&#x27; with message &#x27=
;could not find driver&#x27; in /www/pdo.php:2 Stack trace: #0 /www/pdo.php=
(2): PDO-&gt;__construct(&#x27;pgsql:dbname=3Dpd...&#x27;, &#x27;username&#=
x27;, &#x27;password&#x27;) #1 {main} thrown in /www/pdo.php on line 2
</div>
<p>
This is the default behaviour when an exception is not caught, a backtrace=
 is generated and the script is terminated. As you can see, all the informa=
tion is dumped including the file path and the database username and passwo=
rd. It is the responsibility of the coder to catch exceptions or to deal wi=
th the errors using set_exception_handler() function to prevent this happen=
ing. More about handling errors and exceptions later.
</p>


<h2><a name=3D"4.2" class=3D"anchor">Connect to SQLite</a></h2>
<p>
When PDO is used with SQLite, database creation becomes even easier. Simply=
 specify the path to the database file and it will be loaded. If the databa=
se file does not exist, PDO will attempt to create it. Lets see how we go=
 with the same code but change the database to SQLite.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;connect&#xa0;to&#xa0;SQLite&#xa0;database&#xa0;***/<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span=
><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</span><span style=3D"col=
or: #0000BB">PDO</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #DD0000">&quot;sqlite:/path/to/database.sdb&quot;</span><span st=
yle=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><spa=
n style=3D"color: #0000BB">PDOException&#xa0;$e</span><span style=3D"color:=
 #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#x=
a0;</span><span style=3D"color: #0000BB">$e</span><span style=3D"color: #00=
7700">-&gt;</span><span style=3D"color: #0000BB">getMessage</span><span sty=
le=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span styl=
e=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>
<p>
Because the database path does not exist and cannot be created, an exceptio=
n is thrown, the exception is caught in the catch block and the error messa=
ge is displayed with $e-&gt;Message(). Now that we know how to create a dat=
abase, we can create tables and INSERT some data.
</p>
<p>
Another feature of SQLite is the ability to create tables in memory. This=
 can be amazingly helpful if you wish to create tempory databases or tables=
 or even for development code.
</p>

<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;connect&#xa0;to&#xa0;SQLite&#xa0;database&#xa0;***/<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$db&#xa0;</span>=
<span style=3D"color: #007700">=3D&#xa0;new&#xa0;</span><span style=3D"colo=
r: #0000BB">PDO</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #DD0000">&quot;sqlite::memory&quot;</span><span style=3D"color: #00=
7700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF800=
0">/***&#xa0;a&#xa0;little&#xa0;message&#xa0;to&#xa0;say&#xa0;we&#xa0;did&#=
xa0;it&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
07700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;database&#xa0;=
created&#xa0;in&#xa0;memory&#x27;</span><span style=3D"color: #007700">;<br=
>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><span style=3D"color: #0000BB">P=
DOException&#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&=
#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"col=
or: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</span><span styl=
e=3D"color: #0000BB">getMessage</span><span style=3D"color: #007700">();<br=
>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<b=
r></span>
</span>
</code></div>
<p>
We see above that a database is created in memory and a message is displaye=
d to let us know. If the creation of the database failed, a PDO exception=
 would be thrown and the script terminated at that point, passing control=
 to the catch block.
</p>

<h2><a name=3D"4.3" class=3D"anchor">Connect to MySQL</a></h2>
<p>
MySQL is the choice of many web developers and will be used as the database=
 of choice for much of this tutorial. Here we see how to connect to a MySQL=
 database.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<br><span style=3D"color: #0000BB">&lt;?php<br><br></span><span style=3D"co=
lor: #FF8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=
=3D"color: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=
=3D&#xa0;</span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span>=
<span style=3D"color: #007700">;<br><br></span><span style=3D"color: #FF800=
0">/***&#xa0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color:=
 #0000BB">$username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</s=
pan><span style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=
=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa=
0;mysql&#xa0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$p=
assword&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span st=
yle=3D"color: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #00=
7700">;<br><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"=
color: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;ne=
w&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"color=
: #007700">(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span=
><span style=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD00=
00">;dbname=3Dmysql&quot;</span><span style=3D"color: #007700">,&#xa0;</spa=
n><span style=3D"color: #0000BB">$username</span><span style=3D"color: #007=
700">,&#xa0;</span><span style=3D"color: #0000BB">$password</span><span sty=
le=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;=
have&#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;C=
onnected&#xa0;to&#xa0;database&#x27;</span><span style=3D"color: #007700">;=
<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><span style=3D"color: #0000BB=
">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa=
0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"=
color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</span><span=
 style=3D"color: #0000BB">getMessage</span><span style=3D"color: #007700">(=
);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&=
gt;<br></span>
</span>
</code></div>

<h2><a name=3D"4.4" class=3D"anchor">Connect to Firebird</a></h2>
<p>

Often used by developers using windows, Firebird is a good database and con=
nection is just as simple as the examples above.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">(</span><span style=3D"color: #DD0000">&quot;firebird:dbname=3Dlocalhost:=
C:\Programs\Firebird\DATABASE.FDB&quot;</span><span style=3D"color: #007700=
">,&#xa0;</span><span style=3D"color: #DD0000">&quot;SYSDBA&quot;</span><sp=
an style=3D"color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&q=
uot;masterkey&quot;</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;=
&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;<br>catch&#xa0;(</span><span style=3D"color:=
 #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br>&#=
xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span=
 style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</sp=
an><span style=3D"color: #0000BB">getMessage</span><span style=3D"color: #0=
07700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #00=
00BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"4.5" class=3D"anchor">Connect to Informix</a></h2>
<p>
Informix is popular with many windows users also, this example shows how to=
 connect to an informix database cataloged as InformixDB in odbc.ini:
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">(</span><span style=3D"color: #DD0000">&quot;informix:DSN=3DInformixDB&qu=
ot;</span><span style=3D"color: #007700">,&#xa0;</span><span style=3D"color=
: #DD0000">&quot;username&quot;</span><span style=3D"color: #007700">,&#xa0=
;</span><span style=3D"color: #DD0000">&quot;password&quot;</span><span sty=
le=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch&#xa0;(</span=
><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span style=3D"c=
olor: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;ec=
ho&#xa0;</span><span style=3D"color: #0000BB">$e</span><span style=3D"color=
: #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage</span><spa=
n style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span=
 style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"4.6" class=3D"anchor">Connect to Oracle</a></h2>
<p>
The Oracle database is used by many &#x27;enterprise&#x27; companies but th=
ese days there are sleeker options. Lets see a simple connection to Oracle
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">(</span><span style=3D"color: #DD0000">&quot;OCI:&quot;</span><span style=
=3D"color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&quot;user=
name&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span style=
=3D"color: #DD0000">&quot;password&quot;</span><span style=3D"color: #00770=
0">)<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch&#xa0;(</span><span style=3D"colo=
r: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br>=
&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span=
 style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</sp=
an><span style=3D"color: #0000BB">getMessage</span><span style=3D"color: #0=
07700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #00=
00BB">?&gt;<br></span>
</span>
</code></div>
<p>
This works fine for a simple Oracle connection. The oracle driver may take=
 two optional parameters, The database name, and the character set. To conn=
ect with a database name of &quot;accounts&quot; and a charset of UTF-8 the=
 following code should be used.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">(</span><span style=3D"color: #DD0000">&quot;OCI:dbname=3Daccounts;charse=
t=3DUTF-8&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span st=
yle=3D"color: #DD0000">&quot;username&quot;</span><span style=3D"color: #00=
7700">,&#xa0;</span><span style=3D"color: #DD0000">&quot;password&quot;</sp=
an><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch&=
#xa0;(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><spa=
n style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMes=
sage</span><span style=3D"color: #007700">();&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
}&#xa0;</span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"4.7" class=3D"anchor">Connect to ODBC</a></h2>
<p>
There are many connections ODBC can create, here we show how to connect to=
 a MS Access database named accounts. The specified path is c:\\accounts.md=
b.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">(</span><span style=3D"color: #DD0000">&quot;odbc:Driver=3D{Microsoft&#xa=
0;Access&#xa0;Driver&#xa0;(*.mdb)};Dbq=3DC:\accounts.mdb;Uid=3DAdmin&quot;<=
/span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>cat=
ch&#xa0;(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><=
span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0=
;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMes=
sage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}&=
#xa0;<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"4.8" class=3D"anchor">Connect to DBLIB</a></h2>
<p>
Once again a Windows specific database, DBLIB can be used as follows
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span=
><span style=3D"color: #DD0000">&quot;localhost&quot;</span><span style=3D"=
color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #0000BB">$port&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">10060</span><span=
 style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$dbname&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&quot;my_database&=
quot;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;</s=
pan><span style=3D"color: #0000BB">$username&#xa0;</span><span style=3D"col=
or: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&quot;username&=
quot;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;</s=
pan><span style=3D"color: #0000BB">$password&#xa0;</span><span style=3D"col=
or: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&quot;password&=
quot;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0=
;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"colo=
r: #007700">=3D&#xa0;new&#xa0;</span><span style=3D"color: #0000BB">PDO&#xa=
0;</span><span style=3D"color: #007700">(</span><span style=3D"color: #DD00=
00">&quot;dblib:host=3D</span><span style=3D"color: #0000BB">$hostname</spa=
n><span style=3D"color: #DD0000">:</span><span style=3D"color: #0000BB">$po=
rt</span><span style=3D"color: #DD0000">;dbname=3D</span><span style=3D"col=
or: #0000BB">$dbname</span><span style=3D"color: #DD0000">&quot;</span><spa=
n style=3D"color: #007700">,</span><span style=3D"color: #DD0000">&quot;</s=
pan><span style=3D"color: #0000BB">$username</span><span style=3D"color: #D=
D0000">&quot;</span><span style=3D"color: #007700">,</span><span style=3D"c=
olor: #DD0000">&quot;</span><span style=3D"color: #0000BB">$password</span>=
<span style=3D"color: #DD0000">&quot;</span><span style=3D"color: #007700">=
);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch&#xa0;(</span><span style=3D"color:=
 #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br>&#=
xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span=
 style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</sp=
an><span style=3D"color: #0000BB">getMessage</span><span style=3D"color: #0=
07700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #00=
00BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"4.9" class=3D"anchor">Connect to IBM</a></h2>
<p>
This example shows connecting to an IBM DB2 database named accounts
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$db&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;ibm:DRIVER=3D{IBM&#xa0;DB2&#x=
a0;ODBC&#xa0;DRIVER};DATABASE=3Daccounts;&#xa0;HOSTNAME=3D1.2.3,4;PORT=3D56=
789;PROTOCOL=3DTCPIP;&quot;</span><span style=3D"color: #007700">,&#xa0;</s=
pan><span style=3D"color: #DD0000">&quot;username&quot;</span><span style=
=3D"color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&quot;pass=
word&quot;</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#x=
a0;}<br>catch&#xa0;(</span><span style=3D"color: #0000BB">PDOException&#xa0=
;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>=
&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e<=
/span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #000=
0BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#x=
a0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>

<h2><a name=3D"6" class=3D"anchor">Close a Database Connection</a></h2>
<p>
Up to this point we have seen how to connect to a database using PDO. But=
 of course, we also need to disconnect when we have finished. To close the=
 connection the object needs to be destroyed so that no reference to it rem=
ains. This is normally done at the end of a script where PHP will automatic=
ally close the connection. However, the connection may be close implicitly=
 by assigning the value of <span class=3D"codechar">null</span> to the obje=
ct as seen below.
</p><p>
</p><div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Dmysql&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span st=
yle=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&#xa=
0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"colo=
r: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8=
000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&#xa0;=
connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connected&#=
xa0;to&#xa0;database&#x27;</span><span style=3D"color: #007700">;<br><br>&#=
xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;close=
&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa=
0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"col=
or: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">null</span><spa=
n style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><=
span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span style=3D"col=
or: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo=
&#xa0;</span><span style=3D"color: #0000BB">$e</span><span style=3D"color:=
 #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage</span><span=
 style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span=
 style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>
<p>
If the database connection fails, the code to assign a null value is never=
 called as the exception throws control to the catch block.
</p>

<h2><a name=3D"7" class=3D"anchor">PDO Query</a></h2>
<p>
Now that we can open and close a connection to the database with PDO, we ca=
n make use of it for what databases are made for, storing and retrieving in=
formation. The simplest form of query is the PDO query method. As the name=
 suggests, this is used to perform database queries. Before we begin to que=
ry a database, lets create a small database with a table for animals. This=
 will be a MySQL database for use throughout much of this tutorial. Remembe=
r, because PDO provides a common set of tools for databases, once we have=
 the correct connection, the rest of the code is the same, regardless of th=
e database you choose. When using PDO to query a database, the function use=
d to do so depends on the statement you wish to send to the database. Below=
 we will see three queries on how to INSERT, SELECT and UPDATE.
</p>
<h2><a name=3D"7.1" class=3D"anchor">INSERT</a></h2>
<p>
To gather information from a database, we first need to put some info into=
 it. We use the same code from above to connect and disconnect from the dat=
abase and the INSERT query is accomplished using the PDO::exec method.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;INSERT&#xa0;data&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</sp=
an><span style=3D"color: #0000BB">$count&#xa0;</span><span style=3D"color:=
 #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec</=
span><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">=
&quot;INSERT&#xa0;INTO&#xa0;animals(animal_type,&#xa0;animal_name)&#xa0;VAL=
UES&#xa0;(&#x27;kiwi&#x27;,&#xa0;&#x27;troy&#x27;)&quot;</span><span style=
=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D=
"color: #FF8000">/***&#xa0;echo&#xa0;the&#xa0;number&#xa0;of&#xa0;affected&=
#xa0;rows&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #007700">echo&#xa0;</span><span style=3D"color: #0000BB">$count</span><spa=
n style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span st=
yle=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;connecti=
on&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000B=
B">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span st=
yle=3D"color: #0000BB">null</span><span style=3D"color: #007700">;<br>&#xa0=
;&#xa0;&#xa0;&#xa0;}<br>catch(</span><span style=3D"color: #0000BB">PDOExce=
ption&#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&=
#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0=
000BB">$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"c=
olor: #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0=
;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></sp=
an>
</span>
</code></div>
<p>
The output of the script above will look like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
1
</div>
<p>
This shows us that we connected successfully to the database and then we ha=
ve displayed the number of affected rows. PDO::exec returns the number of=
 affected rows if successful, or zero (0) if no rows are affected. This may=
 cause issues if you are checking for a boolean value and why it is recomme=
nded using =3D=3D=3D when to check for type also, as zero (0) may evaluate=
 to boolean FALSE.
</p>
<p>
The PDO::exec method should be used for SQL statements that do not return=
 a result set. We could use this same method to INSERT many more animals to=
 our database, but a more effecient method would be to use a transaction.=
 This is covered in the <a href=3D"#11">section on Transactions</a>.
</p>
<h2><a name=3D"7.2" class=3D"anchor">SELECT</a></h2>
<p>
Unlike PDO::exec the PDO::query method returns a result set, that is, a gro=
up of information from the database in the form of a PDOStatement object.=
 Our database should look a little like the example in the <a href=3D"#1">W=
hat is PDO</a> section. Using this we can SELECT information.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;foreach&#xa0;(</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">)&#xa0;as&#xa0;</span><span style=3D"color: #0000BB">$row</span><span=
 style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;print&#xa0;</span>=
<span style=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[<=
/span><span style=3D"color: #DD0000">&#x27;animal_type&#x27;</span><span st=
yle=3D"color: #007700">]&#xa0;.</span><span style=3D"color: #DD0000">&#x27;=
&#xa0;-&#xa0;&#x27;</span><span style=3D"color: #007700">.&#xa0;</span><spa=
n style=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[</spa=
n><span style=3D"color: #DD0000">&#x27;animal_name&#x27;</span><span style=
=3D"color: #007700">]&#xa0;.&#xa0;</span><span style=3D"color: #DD0000">&#x=
27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;=
</span><span style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;databas=
e&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa=
0;</span><span style=3D"color: #0000BB">null</span><span style=3D"color: #0=
07700">;<br>}<br>catch(</span><span style=3D"color: #0000BB">PDOException&#=
xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<=
br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">=
$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>
<p>
From the script above, we can expect the results to look like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
emu - bruce<br>
funnel web - bruce<br>
lizard - bruce<br>
dingo - bruce<br>
kangaroo - bruce<br>
wallaby - bruce<br>
wombat - bruce<br>
koala - bruce<br>
kiwi - troy
</div>
<p>
You will have noticed that we can iterate over the result set directly with=
 foreach. This is because internally the PDO statement implements the SPL=
 traversble iterator, thus giving all the benifits of using SPL. For more=
 on SPL refer to the <a href=3D"http://www.phpro.org/tutorials/Introduction=
-to-SPL.html">Introduction to SPL</a> page. The greatest benifit of this is=
 that SPL iterators know only one element at a time and thus large result=
 sets become manageable without hogging memory.
</p>


<h2><a name=3D"7.3" class=3D"anchor">UPDATE</a></h2>
<p>
To update a field in a database with PDO we once again use the PDO::exec me=
thod in the same manner as we did with the <a href=3D"#7.1">INSERT</a>
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br><br></span><span style=3D"color:=
 #FF8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"=
color: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#x=
a0;</span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span=
 style=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/*=
**&#xa0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000=
BB">$username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><s=
pan style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"colo=
r: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&=
#xa0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&=
#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"c=
olor: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<=
br><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0=
;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007=
700">(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span=
 style=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;d=
bname=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><s=
pan style=3D"color: #0000BB">$username</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=
=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;ha=
ve&#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;C=
onnected&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"=
color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"colo=
r: #FF8000">/***&#xa0;INSERT&#xa0;data&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0=
;</span><span style=3D"color: #0000BB">$count&#xa0;</span><span style=3D"co=
lor: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><sp=
an style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec=
</span><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000=
">&quot;UPDATE&#xa0;animals&#xa0;SET&#xa0;animal_name=3D&#x27;bruce&#x27;&#=
xa0;WHERE&#xa0;animal_name=3D&#x27;troy&#x27;&quot;</span><span style=3D"co=
lor: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color=
: #FF8000">/***&#xa0;echo&#xa0;the&#xa0;number&#xa0;of&#xa0;affected&#xa0;r=
ows&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0077=
00">echo&#xa0;</span><span style=3D"color: #0000BB">$count</span><span styl=
e=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D=
"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;connection&#xa=
0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$db=
h&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D=
"color: #0000BB">null</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0=
;&#xa0;&#xa0;}<br>catch(</span><span style=3D"color: #0000BB">PDOException&=
#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{=
<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB"=
>$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
Once again we see that the connection is made to the database and one row=
 is affected as now the kiwi has become a true Australian like the rest of=
 the creatures. PDO::exec should be used for all database queries where no=
 result set is required.
</p>

<h2><a name=3D"8" class=3D"anchor">FETCH Modes</a></h2>

<p>
The section above showed how using PDO::query we can fetch information from=
 the database. The PDO::query method returns a PDOStatement object that can=
 be utilized in much the same was as mysql_fetch_object() or pg_fetch_objec=
t(). Of course there are times when an numerical index is needed or an asso=
ciative index. PDO::query provides for this also by allowing the coder to=
 set the fetch mode for via the PDOStatement object or via PDOStatement::se=
tFetchMode().
</p>
<h3><a name=3D"8.1" class=3D"anchor">FETCH ASSOC</a></h3>
<p>
To fetch an associative array from our results the constant PDO::FETCH_ASSO=
C is used and returns the column names as indexes or keys of the resulting=
 array.
</p><div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;echo&#xa0;number&#xa0;of&#xa0;columns&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$result&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$s=
tmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">fetch</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span st=
yle=3D"color: #0000BB">FETCH_ASSOC</span><span style=3D"color: #007700">);<=
br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#=
xa0;loop&#xa0;over&#xa0;the&#xa0;object&#xa0;directly&#xa0;***/<br>&#xa0;&#=
xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700">foreach(</span><span=
 style=3D"color: #0000BB">$result&#xa0;</span><span style=3D"color: #007700=
">as&#xa0;</span><span style=3D"color: #0000BB">$key</span><span style=3D"c=
olor: #007700">=3D&gt;</span><span style=3D"color: #0000BB">$val</span><spa=
n style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#=
xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$key</span><span=
 style=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x27;&#xa=
0;-&#xa0;&#x27;</span><span style=3D"color: #007700">.</span><span style=3D=
"color: #0000BB">$val</span><span style=3D"color: #007700">.</span><span st=
yle=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"c=
olor: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa=
0;</span><span style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;datab=
ase&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa=
0;</span><span style=3D"color: #0000BB">null</span><span style=3D"color: #0=
07700">;<br>}<br>catch(</span><span style=3D"color: #0000BB">PDOException&#=
xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<=
br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">=
$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The above code will give a result like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
animal_id - 1<br>
animal_type - emu<br>
animal_name - bruce
</div>
<p>
PDO has returned the results as a PDOStatement object that we can iterate=
 over directly. The resulting indexes are the names of the fields within th=
e animals database.
</p>

<h3><a name=3D"8.2" class=3D"anchor">FETCH NUM</a></h3>
<p>
Like PDO::FETCH_ASSOC, the PDO::FETCH_NUM produces a numerical index of the=
 result set rather than the field names.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;echo&#xa0;number&#xa0;of&#xa0;columns&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$result&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$s=
tmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">fetch</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span st=
yle=3D"color: #0000BB">FETCH_NUM</span><span style=3D"color: #007700">);<br=
><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa=
0;loop&#xa0;over&#xa0;the&#xa0;object&#xa0;directly&#xa0;***/<br>&#xa0;&#xa=
0;&#xa0;&#xa0;</span><span style=3D"color: #007700">foreach(</span><span st=
yle=3D"color: #0000BB">$result&#xa0;</span><span style=3D"color: #007700">a=
s&#xa0;</span><span style=3D"color: #0000BB">$key</span><span style=3D"colo=
r: #007700">=3D&gt;</span><span style=3D"color: #0000BB">$val</span><span=
 style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#x=
a0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$key</span><span=
 style=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x27;&#xa=
0;-&#xa0;&#x27;</span><span style=3D"color: #007700">.</span><span style=3D=
"color: #0000BB">$val</span><span style=3D"color: #007700">.</span><span st=
yle=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"c=
olor: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa=
0;</span><span style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;datab=
ase&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa=
0;</span><span style=3D"color: #0000BB">null</span><span style=3D"color: #0=
07700">;<br>}<br>catch(</span><span style=3D"color: #0000BB">PDOException&#=
xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<=
br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">=
$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The above code will give a result like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
0 - 1<br>
1 - emu<br>
2 - bruce
</div>
<p>
As you can see above the indexes are now numeric in the result set
</p>

<h3><a name=3D"8.3" class=3D"anchor">FETCH BOTH</a></h3>
<p>
There may be times you need to fetch both numerical and associative indexes=
. PDO::FETCH_BOTH produces a numerical and associative index of the result=
 set so you can use either, or both.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;echo&#xa0;number&#xa0;of&#xa0;columns&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$result&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$s=
tmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">fetch</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span st=
yle=3D"color: #0000BB">FETCH_BOTH</span><span style=3D"color: #007700">);<b=
r><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#x=
a0;loop&#xa0;over&#xa0;the&#xa0;object&#xa0;directly&#xa0;***/<br>&#xa0;&#x=
a0;&#xa0;&#xa0;</span><span style=3D"color: #007700">foreach(</span><span=
 style=3D"color: #0000BB">$result&#xa0;</span><span style=3D"color: #007700=
">as&#xa0;</span><span style=3D"color: #0000BB">$key</span><span style=3D"c=
olor: #007700">=3D&gt;</span><span style=3D"color: #0000BB">$val</span><spa=
n style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#=
xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$key</span><span=
 style=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x27;&#xa=
0;-&#xa0;&#x27;</span><span style=3D"color: #007700">.</span><span style=3D=
"color: #0000BB">$val</span><span style=3D"color: #007700">.</span><span st=
yle=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"c=
olor: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa=
0;</span><span style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;datab=
ase&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa=
0;</span><span style=3D"color: #0000BB">null</span><span style=3D"color: #0=
07700">;<br>}<br>catch(</span><span style=3D"color: #0000BB">PDOException&#=
xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<=
br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">=
$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
Now we see the results have included both indexes.
</p>
<div class=3D"displaybox">
Connected to database<br>
animal_id - 1<br>
0 - 1<br>
animal_type - emu<br>
1 - emu<br>
animal_name - bruce<br>
2 - bruce
</div>

<h3><a name=3D"8.4" class=3D"anchor">FETCH OBJECT</a></h3>
<p>
This little gem takes the result set and returns it as an anonymous object=
 or stdClass and maps the field names from the database as object propertie=
s with the values the values of stored in the database.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;echo&#xa0;number&#xa0;of&#xa0;columns&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$obj&#xa0;</span><span sty=
le=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$stmt<=
/span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #000=
0BB">fetch</span><span style=3D"color: #007700">(</span><span style=3D"colo=
r: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span style=
=3D"color: #0000BB">FETCH_OBJ</span><span style=3D"color: #007700">);<br><b=
r>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;l=
oop&#xa0;over&#xa0;the&#xa0;object&#xa0;directly&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #007700">echo&#xa0;</span><span sty=
le=3D"color: #0000BB">$obj</span><span style=3D"color: #007700">-&gt;</span=
><span style=3D"color: #0000BB">animal_id</span><span style=3D"color: #0077=
00">.</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</s=
pan><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;<=
/span><span style=3D"color: #0000BB">$obj</span><span style=3D"color: #0077=
00">-&gt;</span><span style=3D"color: #0000BB">animal_type</span><span styl=
e=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x27;&lt;br&#x=
a0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;=
&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$obj</span><span styl=
e=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">animal_name=
</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</sp=
an><span style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#x=
a0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"co=
lor: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</sp=
an><span style=3D"color: #0000BB">null</span><span style=3D"color: #007700"=
>;<br>}<br>catch(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e=
</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#x=
a0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</sp=
an><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB=
">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;=
&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The above code gives the results like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
1<br>
emu<br>
bruce
</div>
<p>
The use of the field names as class properties makes integrating results in=
to an Object Oriented envioronment simple.
</p>


<h3><a name=3D"8.5" class=3D"anchor">FETCH LAZY</a></h3>
<p>
PDO::FETCH_LAZY is odd as it combines PDO::FETCH_BOTH and PDO::FETCH_OBJ.=
 I am unsure why you would want to do this, but it must have been important=
 enough for somebody to create it. The code below is that of PDO::FETCH_BOT=
H and is reproduced here for examples sake.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;echo&#xa0;number&#xa0;of&#xa0;columns&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$result&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$s=
tmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">fetch</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span st=
yle=3D"color: #0000BB">FETCH_BOTH</span><span style=3D"color: #007700">);<b=
r><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#x=
a0;loop&#xa0;over&#xa0;the&#xa0;object&#xa0;directly&#xa0;***/<br>&#xa0;&#x=
a0;&#xa0;&#xa0;</span><span style=3D"color: #007700">foreach(</span><span=
 style=3D"color: #0000BB">$result&#xa0;</span><span style=3D"color: #007700=
">as&#xa0;</span><span style=3D"color: #0000BB">$key</span><span style=3D"c=
olor: #007700">=3D&gt;</span><span style=3D"color: #0000BB">$val</span><spa=
n style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#=
xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$key</span><span=
 style=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x27;&#xa=
0;-&#xa0;&#x27;</span><span style=3D"color: #007700">.</span><span style=3D=
"color: #0000BB">$val</span><span style=3D"color: #007700">.</span><span st=
yle=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"c=
olor: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa=
0;</span><span style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;datab=
ase&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa=
0;</span><span style=3D"color: #0000BB">null</span><span style=3D"color: #0=
07700">;<br>}<br>catch(</span><span style=3D"color: #0000BB">PDOException&#=
xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<=
br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">=
$e</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa=
0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The above code will give a result the same as that of PDO::FETCH_BOTH. Geni=
us!
</p>



<h3><a name=3D"8.6" class=3D"anchor">FETCH CLASS</a></h3>
<p>
PDO::FETCH_CLASS instantiates a new instance of the specified class. The fi=
eld names are mapped to properties (variables) within the class called. Thi=
s saves quite a bit of code and speed is enhanced as the mappings are dealt=
 with internally.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">class&#xa0;</span><span style=3D"color: #0000BB">animals</span><span=
 style=3D"color: #007700">{<br><br>public&#xa0;</span><span style=3D"color:=
 #0000BB">$animal_id</span><span style=3D"color: #007700">;<br><br>public&#=
xa0;</span><span style=3D"color: #0000BB">$animal_type</span><span style=3D=
"color: #007700">;<br><br>public&#xa0;</span><span style=3D"color: #0000BB"=
>$animal_name</span><span style=3D"color: #007700">;<br><br></span><span st=
yle=3D"color: #FF8000">/***<br>&#xa0;*<br>&#xa0;*&#xa0;@capitalize&#xa0;fir=
st&#xa0;words<br>&#xa0;*<br>&#xa0;*&#xa0;@access&#xa0;public<br>&#xa0;*<br>=
&#xa0;*&#xa0;@return&#xa0;string<br>&#xa0;*<br>&#xa0;*/<br></span><span sty=
le=3D"color: #007700">public&#xa0;function&#xa0;</span><span style=3D"color=
: #0000BB">capitalizeType</span><span style=3D"color: #007700">(){<br>&#xa0=
;return&#xa0;</span><span style=3D"color: #0000BB">ucwords</span><span styl=
e=3D"color: #007700">(</span><span style=3D"color: #0000BB">$this</span><sp=
an style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">anim=
al_type</span><span style=3D"color: #007700">);<br>}<br><br>}&#xa0;</span><=
span style=3D"color: #FF8000">/***&#xa0;end&#xa0;of&#xa0;class&#xa0;***/<br=
><br>/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"color=
: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</=
span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span style=
=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa=
0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$u=
sername&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span st=
yle=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color: #00=
7700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#xa0;p=
assword&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#xa0;<=
/span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br><b=
r>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000B=
B">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</span=
><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span style=
=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbname=
=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;fetch&#xa0;into&#xa0;the&#xa0;animals&#xa0;class&#xa0;***/<br>&#=
xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$obj&#xa0;</spa=
n><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #000=
0BB">$stmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"=
color: #0000BB">fetchALL</span><span style=3D"color: #007700">(</span><span=
 style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span=
><span style=3D"color: #0000BB">FETCH_CLASS</span><span style=3D"color: #00=
7700">,&#xa0;</span><span style=3D"color: #DD0000">&#x27;animals&#x27;</spa=
n><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><=
span style=3D"color: #FF8000">/***&#xa0;loop&#xa0;of&#xa0;the&#xa0;object&#=
xa0;directly&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #007700">foreach(</span><span style=3D"color: #0000BB">$obj&#xa0;</span=
><span style=3D"color: #007700">as&#xa0;</span><span style=3D"color: #0000B=
B">$animals</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;call&#xa0;the&#xa0;cap=
italizeType&#xa0;method&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;</span><span style=3D"color: #007700">echo&#xa0;</span><span styl=
e=3D"color: #0000BB">$animals</span><span style=3D"color: #007700">-&gt;</s=
pan><span style=3D"color: #0000BB">capitalizeType</span><span style=3D"colo=
r: #007700">().</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt=
;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span styl=
e=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;connection=
&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB"=
>$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span styl=
e=3D"color: #0000BB">null</span><span style=3D"color: #007700">;<br>}<br>ca=
tch(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span=
 style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#x=
a0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span sty=
le=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage=
</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><=
/span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The code above produces a list of animal types, with the first letter capit=
alized like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
Emu<br>
Funnel Web<br>
Lizard<br>
Dingo<br>
Kangaroo<br>
Wallaby<br>
Wombat<br>
Koala<br>
Kiwi
</div>
<p>
The PDO::FETCH_CLASS constant has fetched the results directly into the ani=
mals class where we were able to directly manipulate the results, nifty.
</p>
<p>
PDO provides an alternative to PDO::fetch and PDO::FETCH_CLASS. PDOStatemen=
t::fetchObject() will bundle them together to give the same result as shown=
 here.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">class&#xa0;</span><span style=3D"color: #0000BB">animals</span><span=
 style=3D"color: #007700">{<br><br>public&#xa0;</span><span style=3D"color:=
 #0000BB">$animal_id</span><span style=3D"color: #007700">;<br><br>public&#=
xa0;</span><span style=3D"color: #0000BB">$animal_type</span><span style=3D=
"color: #007700">;<br><br>public&#xa0;</span><span style=3D"color: #0000BB"=
>$animal_name</span><span style=3D"color: #007700">;<br><br></span><span st=
yle=3D"color: #FF8000">/***<br>&#xa0;*<br>&#xa0;*&#xa0;@capitalize&#xa0;fir=
st&#xa0;words<br>&#xa0;*<br>&#xa0;*&#xa0;@access&#xa0;public<br>&#xa0;*<br>=
&#xa0;*&#xa0;@return&#xa0;string<br>&#xa0;*<br>&#xa0;*/<br></span><span sty=
le=3D"color: #007700">public&#xa0;function&#xa0;</span><span style=3D"color=
: #0000BB">capitalizeType</span><span style=3D"color: #007700">(){<br>&#xa0=
;return&#xa0;</span><span style=3D"color: #0000BB">ucwords</span><span styl=
e=3D"color: #007700">(</span><span style=3D"color: #0000BB">$this</span><sp=
an style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">anim=
al_type</span><span style=3D"color: #007700">);<br>}<br><br>}&#xa0;</span><=
span style=3D"color: #FF8000">/***&#xa0;end&#xa0;of&#xa0;class&#xa0;***/<br=
><br>/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"color=
: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</=
span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span style=
=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa=
0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$u=
sername&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span st=
yle=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color: #00=
7700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#xa0;p=
assword&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#xa0;<=
/span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br><b=
r>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000B=
B">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</span=
><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span style=
=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbname=
=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$sql&#xa0;</span><=
span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000=
">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"col=
or: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa0;PDOStatement&#xa0;object&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
stmt&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><=
span style=3D"color: #0000BB">query</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #0000BB">$sql</span><span style=3D"color: #0077=
00">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000"=
>/***&#xa0;fetch&#xa0;into&#xa0;the&#xa0;animals&#xa0;class&#xa0;***/<br>&#=
xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animals&#xa0;<=
/span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #0000BB">$stmt</span><span style=3D"color: #007700">-&gt;</span><span styl=
e=3D"color: #0000BB">fetchObject</span><span style=3D"color: #007700">(</sp=
an><span style=3D"color: #DD0000">&#x27;animals&#x27;</span><span style=3D"=
color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #FF8000">/***&#xa0;echo&#xa0;the&#xa0;class&#xa0;properties&#xa0;***/<b=
r>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700">echo&#xa0;<=
/span><span style=3D"color: #0000BB">$animals</span><span style=3D"color:=
 #007700">-&gt;</span><span style=3D"color: #0000BB">animal_id</span><span=
 style=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x27;&lt;=
br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&=
#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$animals</span><=
span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">ca=
pitalizeType</span><span style=3D"color: #007700">().</span><span style=3D"=
color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color:=
 #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"colo=
r: #0000BB">$animals</span><span style=3D"color: #007700">-&gt;</span><span=
 style=3D"color: #0000BB">animal_name</span><span style=3D"color: #007700">=
;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***=
&#xa0;close&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0=
;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">nu=
ll</span><span style=3D"color: #007700">;<br>}<br>catch(</span><span style=
=3D"color: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #00770=
0">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</sp=
an><span style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-=
&gt;</span><span style=3D"color: #0000BB">getMessage</span><span style=3D"c=
olor: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"co=
lor: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The above code gives the results like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
1<br>
Emu<br>
bruce
</div>
<p>
Note that we have called the animals::capitalizeType() method to show that=
 we are in fact working with an instance of the animals class. PDO::fetchOb=
ject() will also work as a substitute for PDO::FETCH_OBJ.
</p>

<h3><a name=3D"8.7" class=3D"anchor">FETCH INTO</a></h3>
<p>
The PDO::FETCH_INTO constant allows us to fetch the data into an existing=
 instance of a class. Like PDO::FETCH_CLASS the field names are mapped to=
 the class properties. With this in mind, we should be able to replicate th=
e behaviour of PDO::FETCH_CLASS by instantiating the new object when settin=
g the fetch mode. In this instance, the fetch mode is set using PDO::setFet=
chMode() method.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #00=
7700">class&#xa0;</span><span style=3D"color: #0000BB">animals</span><span=
 style=3D"color: #007700">{<br><br>public&#xa0;</span><span style=3D"color:=
 #0000BB">$animal_id</span><span style=3D"color: #007700">;<br><br>public&#=
xa0;</span><span style=3D"color: #0000BB">$animal_type</span><span style=3D=
"color: #007700">;<br><br>public&#xa0;</span><span style=3D"color: #0000BB"=
>$animal_name</span><span style=3D"color: #007700">;<br><br><br>public&#xa0=
;function&#xa0;</span><span style=3D"color: #0000BB">capitalizeType</span><=
span style=3D"color: #007700">(){<br>&#xa0;return&#xa0;</span><span style=
=3D"color: #0000BB">ucwords</span><span style=3D"color: #007700">(</span><s=
pan style=3D"color: #0000BB">$this</span><span style=3D"color: #007700">-&g=
t;</span><span style=3D"color: #0000BB">animal_type</span><span style=3D"co=
lor: #007700">);<br>}<br><br>}&#xa0;</span><span style=3D"color: #FF8000">/=
***&#xa0;end&#xa0;of&#xa0;class&#xa0;***/<br><br>/***&#xa0;instantiate&#xa0=
;a&#xa0;new&#xa0;animals&#xa0;instance&#xa0;***/<br></span><span style=3D"c=
olor: #0000BB">$animals&#xa0;</span><span style=3D"color: #007700">=3D&#xa0=
;new&#xa0;</span><span style=3D"color: #0000BB">animals</span><span style=
=3D"color: #007700">;<br><br></span><span style=3D"color: #0000BB">$animals=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">animal_id&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span>=
<span style=3D"color: #0000BB">10</span><span style=3D"color: #007700">;<br=
><br></span><span style=3D"color: #0000BB">$animals</span><span style=3D"co=
lor: #007700">-&gt;</span><span style=3D"color: #0000BB">animal_type&#xa0;<=
/span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #DD0000">&#x27;crocodile&#x27;</span><span style=3D"color: #007700">;<br><=
br></span><span style=3D"color: #0000BB">$animals</span><span style=3D"colo=
r: #007700">-&gt;</span><span style=3D"color: #0000BB">animal_name&#xa0;</s=
pan><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #D=
D0000">&#x27;bruce&#x27;</span><span style=3D"color: #007700">;<br><br></sp=
an><span style=3D"color: #FF8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<b=
r></span><span style=3D"color: #0000BB">$hostname&#xa0;</span><span style=
=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#x27;lo=
calhost&#x27;</span><span style=3D"color: #007700">;<br><br></span><span st=
yle=3D"color: #FF8000">/***&#xa0;mysql&#xa0;username&#xa0;***/<br></span><s=
pan style=3D"color: #0000BB">$username&#xa0;</span><span style=3D"color: #0=
07700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#x27;username&#x27;<=
/span><span style=3D"color: #007700">;<br><br></span><span style=3D"color:=
 #FF8000">/***&#xa0;mysql&#xa0;password&#xa0;***/<br></span><span style=3D"=
color: #0000BB">$password&#xa0;</span><span style=3D"color: #007700">=3D&#x=
a0;</span><span style=3D"color: #DD0000">&#x27;password&#x27;</span><span=
 style=3D"color: #007700">;<br><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</=
span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"color:=
 #007700">=3D&#xa0;new&#xa0;</span><span style=3D"color: #0000BB">PDO</span=
><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">&quo=
t;mysql:host=3D</span><span style=3D"color: #0000BB">$hostname</span><span=
 style=3D"color: #DD0000">;dbname=3Danimals&quot;</span><span style=3D"colo=
r: #007700">,&#xa0;</span><span style=3D"color: #0000BB">$username</span><s=
pan style=3D"color: #007700">,&#xa0;</span><span style=3D"color: #0000BB">$=
password</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0=
;</span><span style=3D"color: #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#=
xa0;saying&#xa0;we&#xa0;have&#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;=
&#xa0;</span><span style=3D"color: #007700">echo&#xa0;</span><span style=3D=
"color: #DD0000">&#x27;Connected&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x2=
7;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</=
span><span style=3D"color: #FF8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0=
;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color=
: #0000BB">$sql&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span>=
<span style=3D"color: #DD0000">&quot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&q=
uot;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;=
</span><span style=3D"color: #FF8000">/***&#xa0;fetch&#xa0;into&#xa0;an&#xa=
0;PDOStatement&#xa0;object&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><spa=
n style=3D"color: #0000BB">$stmt&#xa0;</span><span style=3D"color: #007700"=
>=3D&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span style=3D"c=
olor: #007700">-&gt;</span><span style=3D"color: #0000BB">query</span><span=
 style=3D"color: #007700">(</span><span style=3D"color: #0000BB">$sql</span=
><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;set&#xa0;the&#xa0;fetch&#xa0;mode&#x=
a0;with&#xa0;PDO::setFetchMode()&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</spa=
n><span style=3D"color: #0000BB">$stmt</span><span style=3D"color: #007700"=
>-&gt;</span><span style=3D"color: #0000BB">setFetchMode</span><span style=
=3D"color: #007700">(</span><span style=3D"color: #0000BB">PDO</span><span=
 style=3D"color: #007700">::</span><span style=3D"color: #0000BB">FETCH_INT=
O</span><span style=3D"color: #007700">,&#xa0;new&#xa0;</span><span style=
=3D"color: #0000BB">animals</span><span style=3D"color: #007700">);<br><br>=
&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;loo=
p&#xa0;over&#xa0;the&#xa0;PDOStatement&#xa0;directly&#xa0;***/<br>&#xa0;&#x=
a0;&#xa0;&#xa0;</span><span style=3D"color: #007700">foreach(</span><span=
 style=3D"color: #0000BB">$stmt&#xa0;</span><span style=3D"color: #007700">=
as&#xa0;</span><span style=3D"color: #0000BB">$animals</span><span style=3D=
"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;=
echo&#xa0;</span><span style=3D"color: #0000BB">$animals</span><span style=
=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">capitalizeTy=
pe</span><span style=3D"color: #007700">().</span><span style=3D"color: #DD=
0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<=
br>&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;conne=
ction&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #0000BB">null</span><span style=3D"color: #007700">;<br>}<=
br>catch(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><=
span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0=
;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMes=
sage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<=
br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
Once again, the above code produces a list of animal types, with the first=
 letter capitalized like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
Emu<br>
Funnel Web<br>
Lizard<br>
Dingo<br>
Kangaroo<br>
Wallaby<br>
Wombat<br>
Koala<br>
Kiwi
</div>


<h2><a name=3D"9" class=3D"anchor">Error Handling</a></h2>
<p>
PDO error handling is comes in several flavours. Previously in this tutoria=
l we have have only used the simplest of try{} catch(){} blocks to catch an=
 error in the database connection, but what of other errors? perhaps a fiel=
d name does not exist? Lets see how we go with a simple error with the prev=
ious code.
</p>

<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement&#xa0;with&#xa0;inc=
orrect&#xa0;fieldname&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span sty=
le=3D"color: #0000BB">$sql&#xa0;</span><span style=3D"color: #007700">=3D&#=
xa0;</span><span style=3D"color: #DD0000">&quot;SELECT&#xa0;username&#xa0;F=
ROM&#xa0;animals&quot;</span><span style=3D"color: #007700">;<br><br>&#xa0;=
&#xa0;&#xa0;&#xa0;foreach&#xa0;(</span><span style=3D"color: #0000BB">$dbh<=
/span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #000=
0BB">query</span><span style=3D"color: #007700">(</span><span style=3D"colo=
r: #0000BB">$sql</span><span style=3D"color: #007700">)&#xa0;as&#xa0;</span=
><span style=3D"color: #0000BB">$row</span><span style=3D"color: #007700">)=
<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;print&#xa0;</span><span style=3D"color: #0000=
BB">$row</span><span style=3D"color: #007700">[</span><span style=3D"color:=
 #DD0000">&#x27;animal_type&#x27;</span><span style=3D"color: #007700">]&#x=
a0;.</span><span style=3D"color: #DD0000">&#x27;&#xa0;-&#xa0;&#x27;</span><=
span style=3D"color: #007700">.&#xa0;</span><span style=3D"color: #0000BB">=
$row</span><span style=3D"color: #007700">[</span><span style=3D"color: #DD=
0000">&#x27;animal_name&#x27;</span><span style=3D"color: #007700">]&#xa0;.=
&#xa0;</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</=
span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<=
br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;=
</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #0000BB">null</span><span style=3D"color: #007700">;<br>}<br>catch(</span>=
<span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span style=3D"co=
lor: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;ech=
o&#xa0;</span><span style=3D"color: #0000BB">$e</span><span style=3D"color:=
 #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage</span><span=
 style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span=
 style=3D"color: #0000BB">?&gt;</span>
</span>
</code></div>
<p>
The above script will produce an error such as this:
</p>
<div class=3D"displaybox">
Connected to database<br>
<br>
Warning: Invalid argument supplied for foreach() in /www/pdo.php on line 18
</div>
<p>
This is because there is no error handling. The SELECT statement has a fiel=
d name &#x27;username&#x27; which does not exist and an error is generated=
 by the database. The only default error handling is done with the initial=
 connection. Unless we deal with the error, we have a problem with displayi=
ng full path to the world. To deal with this we need to set an attribute to=
 the type of error handling we wish to utilize. The types of error handling=
 are<br>
Exception<br>
Warning<br>
Silent<br>
Lets begin with exception as we have the try{} catch(){} blocks in place al=
ready.
</p>

<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span=
><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statem=
ent&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000=
BB">$sql&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&quot;SELECT&#xa0;username&#xa0;FROM&#xa0;animals=
&quot;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;fo=
reach&#xa0;(</span><span style=3D"color: #0000BB">$dbh</span><span style=3D=
"color: #007700">-&gt;</span><span style=3D"color: #0000BB">query</span><sp=
an style=3D"color: #007700">(</span><span style=3D"color: #0000BB">$sql</sp=
an><span style=3D"color: #007700">)&#xa0;as&#xa0;</span><span style=3D"colo=
r: #0000BB">$row</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;print&#xa0;</span><span style=3D"color: #0000BB">$row</span><span=
 style=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;anim=
al_type&#x27;</span><span style=3D"color: #007700">]&#xa0;.</span><span sty=
le=3D"color: #DD0000">&#x27;&#xa0;-&#xa0;&#x27;</span><span style=3D"color:=
 #007700">.&#xa0;</span><span style=3D"color: #0000BB">$row</span><span sty=
le=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_n=
ame&#x27;</span><span style=3D"color: #007700">]&#xa0;.&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=
=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<=
br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#=
xa0;close&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span sty=
le=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">null</=
span><span style=3D"color: #007700">;<br>}<br>catch(</span><span style=3D"c=
olor: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<=
br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><s=
pan style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;<=
/span><span style=3D"color: #0000BB">getMessage</span><span style=3D"color:=
 #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color:=
 #0000BB">?&gt;</span>
</span>
</code></div>
<p>
Now with the error mode set to Exception the error generated looks like thi=
s:
</p>
<div class=3D"displaybox">
Connected to database<br>
SQLSTATE[42S22]: Column not found: 1054 Unknown column &#x27;username&#x27;=
 in &#x27;field list&#x27;
</div>
<p>
Normally we would not show this type of error to the end user, and the exce=
ption would be handled perhaps with message saying No Results Found or some=
thing vague, but this does show how we can set the error mode as we wish.=
 To set the error mode to Warning should look easy from here.
</p><div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_WARNING</span><=
span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><spa=
n style=3D"color: #FF8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statemen=
t&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB=
">$sql&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span sty=
le=3D"color: #DD0000">&quot;SELECT&#xa0;username&#xa0;FROM&#xa0;animals&quo=
t;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;foreac=
h&#xa0;(</span><span style=3D"color: #0000BB">$dbh</span><span style=3D"col=
or: #007700">-&gt;</span><span style=3D"color: #0000BB">query</span><span=
 style=3D"color: #007700">(</span><span style=3D"color: #0000BB">$sql</span=
><span style=3D"color: #007700">)&#xa0;as&#xa0;</span><span style=3D"color:=
 #0000BB">$row</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;print&#xa0;</span><span style=3D"color: #0000BB">$row</span><span=
 style=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;anim=
al_type&#x27;</span><span style=3D"color: #007700">]&#xa0;.</span><span sty=
le=3D"color: #DD0000">&#x27;&#xa0;-&#xa0;&#x27;</span><span style=3D"color:=
 #007700">.&#xa0;</span><span style=3D"color: #0000BB">$row</span><span sty=
le=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_n=
ame&#x27;</span><span style=3D"color: #007700">]&#xa0;.&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=
=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<=
br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#=
xa0;close&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span sty=
le=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">null</=
span><span style=3D"color: #007700">;<br>}<br>catch(</span><span style=3D"c=
olor: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<=
br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><s=
pan style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;<=
/span><span style=3D"color: #0000BB">getMessage</span><span style=3D"color:=
 #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color:=
 #0000BB">?&gt;</span>
</span>
</code></div>
<p>
Now a different error is displayed.
</p>
<div class=3D"displaybox">
Connected to database<br>
<br>
Warning: PDO::query() [function.PDO-query]: SQLSTATE[42S22]: Column not fou=
nd: 1054 Unknown column &#x27;username&#x27; in &#x27;field list&#x27; in=
 /www/pdo.php on line 21<br>
<br>
Warning: Invalid argument supplied for foreach() in /www/pdo.php on line 21
</div>
<p>
Here and E_WARNING has been generated and if display_errors is on the error=
 would be seen by an end user. It is hoped that if you are in a production=
 environment this is not the case.
</p>
<p>
Lastly, there is the Silent mode. As the name suggests, this mode silences=
 the errors so no output is sent from the error. However, it does not stop=
 the code at the point of error and any further errors are still sent.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_SILENT</span><s=
pan style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #FF8000">/***&#xa0;The&#xa0;SQL&#xa0;SELECT&#xa0;statement=
&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB"=
>$sql&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span styl=
e=3D"color: #DD0000">&quot;SELECT&#xa0;username&#xa0;FROM&#xa0;animals&quot=
;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;foreach=
&#xa0;(</span><span style=3D"color: #0000BB">$dbh</span><span style=3D"colo=
r: #007700">-&gt;</span><span style=3D"color: #0000BB">query</span><span st=
yle=3D"color: #007700">(</span><span style=3D"color: #0000BB">$sql</span><s=
pan style=3D"color: #007700">)&#xa0;as&#xa0;</span><span style=3D"color: #0=
000BB">$row</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;print&#xa0;</span><span style=3D"color: #0000BB">$row</span><span styl=
e=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_ty=
pe&#x27;</span><span style=3D"color: #007700">]&#xa0;.</span><span style=3D=
"color: #DD0000">&#x27;&#xa0;-&#xa0;&#x27;</span><span style=3D"color: #007=
700">.&#xa0;</span><span style=3D"color: #0000BB">$row</span><span style=3D=
"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_name&#=
x27;</span><span style=3D"color: #007700">]&#xa0;.&#xa0;</span><span style=
=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"colo=
r: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&=
#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;clos=
e&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#x=
a0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"co=
lor: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">null</span><sp=
an style=3D"color: #007700">;<br>}<br>catch(</span><span style=3D"color: #0=
000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0=
;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span styl=
e=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</span><s=
pan style=3D"color: #0000BB">getMessage</span><span style=3D"color: #007700=
">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB"=
>?&gt;</span>
</span>
</code></div>
<p>
Now we see the script above produces the following output.
</p>
<div class=3D"displaybox">
Connected to database<br>
<br>
Warning: Invalid argument supplied for foreach() in /www/pdo.php on line 21
</div>
<p>
As you can see, the error has been silenced, but the following error has no=
t been attended to, and would need further checks to ensure the value passe=
d to the foreach is a valid arguement.=20
</p>
<p>
As we saw with the exception code, the SQLSTATE code was part of the error=
 message. This error code is also available with the PDO::errorCode() metho=
d.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><span style=3D"co=
lor: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<b=
r>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><sp=
an style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</=
span><span style=3D"color: #0000BB">getMessage</span><span style=3D"color:=
 #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><br></span><span style=3D"col=
or: #FF8000">/***&#xa0;an&#xa0;invalide&#xa0;fieldname&#xa0;***/<br></span>=
<span style=3D"color: #0000BB">$sql&#xa0;</span><span style=3D"color: #0077=
00">=3D&#xa0;</span><span style=3D"color: #DD0000">&quot;SELECT&#xa0;userna=
me&#xa0;FROM&#xa0;animals&quot;</span><span style=3D"color: #007700">;<br><=
br></span><span style=3D"color: #FF8000">/***&#xa0;run&#xa0;the&#xa0;query&=
#xa0;***/<br></span><span style=3D"color: #0000BB">$result&#xa0;</span><spa=
n style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">$=
dbh</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">query</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #0000BB">$sql</span><span style=3D"color: #007700">);<br><br></span=
><span style=3D"color: #FF8000">/***&#xa0;show&#xa0;the&#xa0;error&#xa0;cod=
e&#xa0;***/<br></span><span style=3D"color: #007700">echo&#xa0;</span><span=
 style=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</=
span><span style=3D"color: #0000BB">errorCode</span><span style=3D"color:=
 #007700">();<br></span><span style=3D"color: #0000BB">?&gt;</span>
</span>
</code></div>
<p>
The code above shows the error code relevant to the SQLSTATE. This is a fiv=
e character string as defined by the ANSI SQL standard.
</p>
<div class=3D"displaybox">
Connected to database<br>
42S22
</div>
<p>
Further information about an error may be gained from the PDO::errorInfo()=
 method. This returns an array containing the SQLSTATE, the error code, and=
 the error message.
</p><div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><span style=3D"co=
lor: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<b=
r>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><sp=
an style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</=
span><span style=3D"color: #0000BB">getMessage</span><span style=3D"color:=
 #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color:=
 #FF8000">/***&#xa0;an&#xa0;invalid&#xa0;table&#xa0;name&#xa0;***/<br></spa=
n><span style=3D"color: #0000BB">$sql&#xa0;</span><span style=3D"color: #00=
7700">=3D&#xa0;</span><span style=3D"color: #DD0000">&quot;SELECT&#xa0;anim=
al_id&#xa0;FROM&#xa0;users&quot;</span><span style=3D"color: #007700">;<br>=
<br></span><span style=3D"color: #FF8000">/***&#xa0;run&#xa0;the&#xa0;query=
&#xa0;***/<br></span><span style=3D"color: #0000BB">$result&#xa0;</span><sp=
an style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">=
$dbh</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color:=
 #0000BB">query</span><span style=3D"color: #007700">(</span><span style=3D=
"color: #0000BB">$sql</span><span style=3D"color: #007700">);<br><br></span=
><span style=3D"color: #FF8000">/***&#xa0;show&#xa0;the&#xa0;error&#xa0;inf=
o&#xa0;***/<br></span><span style=3D"color: #007700">foreach(</span><span=
 style=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</=
span><span style=3D"color: #0000BB">errorInfo</span><span style=3D"color:=
 #007700">()&#xa0;as&#xa0;</span><span style=3D"color: #0000BB">$error</spa=
n><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#=
xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$error</spa=
n><span style=3D"color: #007700">.</span><span style=3D"color: #DD0000">&#x=
27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;=
&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;</span>
</span>
</code></div>
<p>
With this code, the error information looks like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
42S02<br>
1146<br>
Table &#x27;animals.users&#x27; doesn&#x27;t exist
</div>
<p>
If there is no error, the SQLSTATE will be the only value shown, with a val=
ue of 00000.
</p>


<h2><a name=3D"10" class=3D"anchor">Prepared statements</a></h2>
<p>
What is a prepared statement? A prepared statement is a pre-compiled SQL st=
atement that accepts zero or more named parameters. Ok, so thats my attempt=
 at describing what it is, if you have a better description, <a href=3D"htt=
p://www.phpro.org/contact/">let us know</a>.
</p>
<p>
The SQL is prepared for execution. This is especially useful when using the=
 same statement or query multiple times with different parameters, or field=
 values. The boost in speed is hidden from userland code as the PDO driver=
 allows client and server side caching of the query and meta data. It also=
 helps prevent SQL injection by calling the PDO::quote() method internally.=
=20
</p><p>
</p><p>
PDO accepts two kinds of parameter markers.<br>
named - :name<br>
question mark - ?<br>
You must choose one or the other, they cannot be mixed.
</p>
<p>
Lets dive in and have a look at how PDO::prepare and PDOStatement::execute=
 work together.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span=
><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;some&#xa0;variables&#xa0;***/<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animal_id&#xa0;=
</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #0000BB">6</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0=
;&#xa0;</span><span style=3D"color: #0000BB">$animal_name&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#=
x27;bruce&#x27;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;prepare&#xa0;the=
&#xa0;SQL&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #0000BB">$stmt&#xa0;</span><span style=3D"color: #007700">=
=3D&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span style=3D"co=
lor: #007700">-&gt;</span><span style=3D"color: #0000BB">prepare</span><spa=
n style=3D"color: #007700">(</span><span style=3D"color: #DD0000">&quot;SEL=
ECT&#xa0;*&#xa0;FROM&#xa0;animals&#xa0;WHERE&#xa0;animal_id&#xa0;=3D&#xa0;:=
animal_id&#xa0;AND&#xa0;animal_name&#xa0;=3D&#xa0;:animal_name&quot;</span>=
<span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><sp=
an style=3D"color: #FF8000">/***&#xa0;bind&#xa0;the&#xa0;paramaters&#xa0;**=
*/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</=
span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000=
BB">bindParam</span><span style=3D"color: #007700">(</span><span style=3D"c=
olor: #DD0000">&#x27;:animal_id&#x27;</span><span style=3D"color: #007700">=
,&#xa0;</span><span style=3D"color: #0000BB">$animal_id</span><span style=
=3D"color: #007700">,&#xa0;</span><span style=3D"color: #0000BB">PDO</span>=
<span style=3D"color: #007700">::</span><span style=3D"color: #0000BB">PARA=
M_INT</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</=
span><span style=3D"color: #0000BB">$stmt</span><span style=3D"color: #0077=
00">-&gt;</span><span style=3D"color: #0000BB">bindParam</span><span style=
=3D"color: #007700">(</span><span style=3D"color: #DD0000">&#x27;:animal_na=
me&#x27;</span><span style=3D"color: #007700">,&#xa0;</span><span style=3D"=
color: #0000BB">$animal_name</span><span style=3D"color: #007700">,&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">::</span><span style=3D"color: #0000BB">PARAM_STR</span><span style=3D"co=
lor: #007700">,&#xa0;</span><span style=3D"color: #0000BB">5</span><span st=
yle=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #FF8000">/***&#xa0;execute&#xa0;the&#xa0;prepared&#xa0;statement=
&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB"=
>$stmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"colo=
r: #0000BB">execute</span><span style=3D"color: #007700">();<br><br>&#xa0;&=
#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;fetch&#xa0=
;the&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$result&#xa0;</span><span style=3D"color: #007700">=3D&=
#xa0;</span><span style=3D"color: #0000BB">$stmt</span><span style=3D"color=
: #007700">-&gt;</span><span style=3D"color: #0000BB">fetchAll</span><span=
 style=3D"color: #007700">();<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #FF8000">/***&#xa0;loop&#xa0;of&#xa0;the&#xa0;results&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700">fore=
ach(</span><span style=3D"color: #0000BB">$result&#xa0;</span><span style=
=3D"color: #007700">as&#xa0;</span><span style=3D"color: #0000BB">$row</spa=
n><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;<=
/span><span style=3D"color: #0000BB">$row</span><span style=3D"color: #0077=
00">[</span><span style=3D"color: #DD0000">&#x27;animal_id&#x27;</span><spa=
n style=3D"color: #007700">].</span><span style=3D"color: #DD0000">&#x27;&l=
t;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0=
;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color:=
 #0000BB">$row</span><span style=3D"color: #007700">[</span><span style=3D"=
color: #DD0000">&#x27;animal_type&#x27;</span><span style=3D"color: #007700=
">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</sp=
an><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row</span><spa=
n style=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;ani=
mal_name&#x27;</span><span style=3D"color: #007700">];<br>&#xa0;&#xa0;&#xa0=
;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><spa=
n style=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;conn=
ection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0=
000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><spa=
n style=3D"color: #0000BB">null</span><span style=3D"color: #007700">;<br>}=
<br>catch(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span>=
<span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa=
0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><spa=
n style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMe=
ssage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}=
<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
The above code will produce the following:
</p>
<div class=3D"displaybox">
Connected to database<br>
6<br>
wallaby<br>
bruce
</div>

<p>
Errr, what was that?<br>
What is this name =3D :variable business<br>
What we have done is bind the variable named $animal_id and $animal_name to=
 the statement. Remember this as many find it difficult to grasp. You are=
 not binding the value of the variable, you are binding the variable itself=
. Lets change the value of the animal_id after the variable is bound and se=
e what happens..
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span=
><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;some&#xa0;variables&#xa0;***/<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animal_id&#xa0;=
</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #0000BB">6</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0=
;&#xa0;</span><span style=3D"color: #0000BB">$animal_name&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#=
x27;bruce&#x27;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;prepare&#xa0;the=
&#xa0;SQL&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #0000BB">$stmt&#xa0;</span><span style=3D"color: #007700">=
=3D&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span style=3D"co=
lor: #007700">-&gt;</span><span style=3D"color: #0000BB">prepare</span><spa=
n style=3D"color: #007700">(</span><span style=3D"color: #DD0000">&quot;SEL=
ECT&#xa0;*&#xa0;FROM&#xa0;animals&#xa0;WHERE&#xa0;animal_id&#xa0;=3D&#xa0;:=
animal_id&#xa0;AND&#xa0;animal_name&#xa0;=3D&#xa0;:animal_name&quot;</span>=
<span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><sp=
an style=3D"color: #FF8000">/***&#xa0;bind&#xa0;the&#xa0;paramaters&#xa0;**=
*/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</=
span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000=
BB">bindParam</span><span style=3D"color: #007700">(</span><span style=3D"c=
olor: #DD0000">&#x27;:animal_id&#x27;</span><span style=3D"color: #007700">=
,&#xa0;</span><span style=3D"color: #0000BB">$animal_id</span><span style=
=3D"color: #007700">,&#xa0;</span><span style=3D"color: #0000BB">PDO</span>=
<span style=3D"color: #007700">::</span><span style=3D"color: #0000BB">PARA=
M_INT</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</=
span><span style=3D"color: #0000BB">$stmt</span><span style=3D"color: #0077=
00">-&gt;</span><span style=3D"color: #0000BB">bindParam</span><span style=
=3D"color: #007700">(</span><span style=3D"color: #DD0000">&#x27;:animal_na=
me&#x27;</span><span style=3D"color: #007700">,&#xa0;</span><span style=3D"=
color: #0000BB">$animal_name</span><span style=3D"color: #007700">,&#xa0;</=
span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700=
">::</span><span style=3D"color: #0000BB">PARAM_STR</span><span style=3D"co=
lor: #007700">,&#xa0;</span><span style=3D"color: #0000BB">5</span><span st=
yle=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #FF8000">/***&#xa0;reassign&#xa0;the&#xa0;animal_id&#xa0;***/<br=
>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animal_id&#=
xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"co=
lor: #0000BB">3</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&=
#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;execute&#xa0;the=
&#xa0;prepared&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><=
span style=3D"color: #0000BB">$stmt</span><span style=3D"color: #007700">-&=
gt;</span><span style=3D"color: #0000BB">execute</span><span style=3D"color=
: #007700">();<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;loop&#xa0;over&#xa0;the&#xa0;results&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700">while(</span><span=
 style=3D"color: #0000BB">$row&#xa0;</span><span style=3D"color: #007700">=
=3D&#xa0;</span><span style=3D"color: #0000BB">$stmt</span><span style=3D"c=
olor: #007700">-&gt;</span><span style=3D"color: #0000BB">fetch</span><span=
 style=3D"color: #007700">())<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span=
><span style=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[=
</span><span style=3D"color: #DD0000">&#x27;animal_id&#x27;</span><span sty=
le=3D"color: #007700">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&=
#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #000=
0BB">$row</span><span style=3D"color: #007700">[</span><span style=3D"color=
: #DD0000">&#x27;animal_type&#x27;</span><span style=3D"color: #007700">].<=
/span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><s=
pan style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0=
;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row</span><span sty=
le=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_n=
ame&#x27;</span><span style=3D"color: #007700">];<br>&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span sty=
le=3D"color: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;connectio=
n&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB=
">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span sty=
le=3D"color: #0000BB">null</span><span style=3D"color: #007700">;<br>}<br>c=
atch(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span=
 style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#x=
a0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span sty=
le=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage=
</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br><=
/span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
Now see the results have changed
</p>
<div class=3D"displaybox">
Connected to database<br>
3<br>
lizard<br>
bruce
</div>
<p>
Because we have bound the variable $animal_id to the $stmt object any chang=
e to the value of that varible will be reflected in the statement. This for=
mat can be used for both SELECT and INSERT statements. But this is a bit cu=
mbersome for a single query and the above PDO query could have done the job=
 equally as well, so lets run the query multiple times. Ssimply by changing=
 the animal_id and animal_name variables we can run the query over and over=
 without re-writing as it is already &#x27;prepared&#x27;.
</p>
<div class=3D"codebox">
<code>
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span=
><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;some&#xa0;variables&#xa0;***/<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animal_id&#xa0;=
</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color:=
 #0000BB">6</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#x=
a0;</span><span style=3D"color: #0000BB">$animal_name&#xa0;</span><span sty=
le=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#x27;=
bruce&#x27;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa0=
;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;prepare&#xa0;the&#xa=
0;SQL&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span styl=
e=3D"color: #0000BB">$stmt&#xa0;</span><span style=3D"color: #007700">=3D&#=
xa0;</span><span style=3D"color: #0000BB">$dbh</span><span style=3D"color:=
 #007700">-&gt;</span><span style=3D"color: #0000BB">prepare</span><span st=
yle=3D"color: #007700">(</span><span style=3D"color: #DD0000">&quot;SELECT&=
#xa0;*&#xa0;FROM&#xa0;animals&#xa0;WHERE&#xa0;animal_id&#xa0;=3D&#xa0;:anim=
al_id&#xa0;AND&#xa0;animal_name&#xa0;=3D&#xa0;:animal_name&quot;</span><spa=
n style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #FF8000">/***&#xa0;bind&#xa0;the&#xa0;paramaters&#xa0;***/=
<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</sp=
an><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB=
">bindParam</span><span style=3D"color: #007700">(</span><span style=3D"col=
or: #DD0000">&#x27;:animal_id&#x27;</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$animal_id</span><span style=3D"=
color: #007700">,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><spa=
n style=3D"color: #007700">::</span><span style=3D"color: #0000BB">PARAM_IN=
T</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span=
><span style=3D"color: #0000BB">$stmt</span><span style=3D"color: #007700">=
-&gt;</span><span style=3D"color: #0000BB">bindParam</span><span style=3D"c=
olor: #007700">(</span><span style=3D"color: #DD0000">&#x27;:animal_name&#x=
27;</span><span style=3D"color: #007700">,&#xa0;</span><span style=3D"color=
: #0000BB">$animal_name</span><span style=3D"color: #007700">,&#xa0;</span>=
<span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::<=
/span><span style=3D"color: #0000BB">PARAM_STR</span><span style=3D"color:=
 #007700">,&#xa0;</span><span style=3D"color: #0000BB">5</span><span style=
=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D=
"color: #FF8000">/***&#xa0;reassign&#xa0;the&#xa0;animal_id&#xa0;***/<br>&#=
xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animal_id&#xa0=
;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color=
: #0000BB">3</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#=
xa0;</span><span style=3D"color: #0000BB">$animal_name&#xa0;</span><span st=
yle=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#x27=
;kevin&#x27;</span><span style=3D"color: #007700">;<br><br>&#xa0;&#xa0;&#xa=
0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;execute&#xa0;the&#x=
a0;prepared&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><spa=
n style=3D"color: #0000BB">$stmt</span><span style=3D"color: #007700">-&gt;=
</span><span style=3D"color: #0000BB">execute</span><span style=3D"color:=
 #007700">();<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;loop&#xa0;over&#xa0;the&#xa0;results&#xa0;***/<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700">while(</span><span=
 style=3D"color: #0000BB">$row&#xa0;</span><span style=3D"color: #007700">=
=3D&#xa0;</span><span style=3D"color: #0000BB">$stmt</span><span style=3D"c=
olor: #007700">-&gt;</span><span style=3D"color: #0000BB">fetch</span><span=
 style=3D"color: #007700">())<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span=
><span style=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[=
</span><span style=3D"color: #DD0000">&#x27;animal_id&#x27;</span><span sty=
le=3D"color: #007700">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&=
#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #000=
0BB">$row</span><span style=3D"color: #007700">[</span><span style=3D"color=
: #DD0000">&#x27;animal_type&#x27;</span><span style=3D"color: #007700">].<=
/span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><s=
pan style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0=
;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row</span><span sty=
le=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_n=
ame&#x27;</span><span style=3D"color: #007700">].</span><span style=3D"colo=
r: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #0077=
00">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#x=
a0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;reassign&#xa=
0;the&#xa0;animal_id&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span styl=
e=3D"color: #0000BB">$animal_id&#xa0;</span><span style=3D"color: #007700">=
=3D&#xa0;</span><span style=3D"color: #0000BB">7</span><span style=3D"color=
: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000B=
B">$animal_name&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span>=
<span style=3D"color: #DD0000">&#x27;bruce&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;execute&#xa0;the&#xa0;prepared&#xa0;statement&#xa0;***/<br=
>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</span>=
<span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">e=
xecute</span><span style=3D"color: #007700">();<br><br>&#xa0;&#xa0;&#xa0;&#=
xa0;</span><span style=3D"color: #FF8000">/***&#xa0;loop&#xa0;over&#xa0;the=
&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"co=
lor: #007700">while(</span><span style=3D"color: #0000BB">$row&#xa0;</span>=
<span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000B=
B">$stmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"co=
lor: #0000BB">fetch</span><span style=3D"color: #007700">())<br>&#xa0;&#xa0=
;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row</span><=
span style=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27;=
animal_id&#x27;</span><span style=3D"color: #007700">].</span><span style=
=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"colo=
r: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;=
</span><span style=3D"color: #0000BB">$row</span><span style=3D"color: #007=
700">[</span><span style=3D"color: #DD0000">&#x27;animal_type&#x27;</span><=
span style=3D"color: #007700">].</span><span style=3D"color: #DD0000">&#x27=
;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"col=
or: #0000BB">$row</span><span style=3D"color: #007700">[</span><span style=
=3D"color: #DD0000">&#x27;animal_name&#x27;</span><span style=3D"color: #00=
7700">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;=
</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"colo=
r: #FF8000">/***&#xa0;reassign&#xa0;the&#xa0;animal_id&#xa0;***/<br>&#xa0;&=
#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$animal_id&#xa0;</sp=
an><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #00=
00BB">4</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;<=
/span><span style=3D"color: #FF8000">/***&#xa0;execute&#xa0;the&#xa0;prepar=
ed&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #0000BB">$stmt</span><span style=3D"color: #007700">-&gt;</span>=
<span style=3D"color: #0000BB">execute</span><span style=3D"color: #007700"=
>();<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/=
***&#xa0;loop&#xa0;over&#xa0;the&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa=
0;&#xa0;</span><span style=3D"color: #007700">while(</span><span style=3D"c=
olor: #0000BB">$row&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</s=
pan><span style=3D"color: #0000BB">$stmt</span><span style=3D"color: #00770=
0">-&gt;</span><span style=3D"color: #0000BB">fetch</span><span style=3D"co=
lor: #007700">())<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&=
#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=
=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[</span><span=
 style=3D"color: #DD0000">&#x27;animal_id&#x27;</span><span style=3D"color:=
 #007700">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#=
x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row</s=
pan><span style=3D"color: #007700">[</span><span style=3D"color: #DD0000">&=
#x27;animal_type&#x27;</span><span style=3D"color: #007700">].</span><span=
 style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=
=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ec=
ho&#xa0;</span><span style=3D"color: #0000BB">$row</span><span style=3D"col=
or: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_name&#x27;=
</span><span style=3D"color: #007700">];<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #FF8000">/***&#xa0;close&#xa0;the&#xa0;database&#xa0;connection&#xa0;**=
*/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #0000BB">null</span><span style=3D"color: #007700">;<br>}<br>catch(</sp=
an><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span style=3D=
"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;=
echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span style=3D"col=
or: #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage</span><s=
pan style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><sp=
an style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></code>
</div>
<p>
Now we have run the query 3 times using the same prepared statement. The re=
sults look like this:
</p>
<div class=3D"displaybox">
Connected to database<br>
7<br>
wombat<br>
bruce<br>
4<br>
dingo<br>
bruce
</div>
<p>
The second result set is missing as there is no animal named \&#x27;kevin\&=
#x27;, all Australians are named \&#x27;bruce\&#x27;. Note also in the abov=
e code we have changed the loop from foreach and PDOStatement::fetchAll()=
 to a while loop using PDOStatement::fetch()As has been mentioned we can ru=
n this over and over, but while it is shorter than coding the query over an=
d over, we can also use an array of values!
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #00=
00BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</s=
pan><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700"=
>(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span sty=
le=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbnam=
e=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span=
 style=3D"color: #0000BB">$username</span><span style=3D"color: #007700">,&=
#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=3D"c=
olor: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&=
#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connec=
ted&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color=
: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh=
</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #00=
00BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span=
><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;some&#xa0;variables&#xa0;***/<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$data&#xa0;</spa=
n><span style=3D"color: #007700">=3D&#xa0;array(</span><span style=3D"color=
: #DD0000">&#x27;animal_id&#x27;</span><span style=3D"color: #007700">=3D&g=
t;</span><span style=3D"color: #0000BB">6</span><span style=3D"color: #0077=
00">,&#xa0;</span><span style=3D"color: #DD0000">&#x27;animal_name&#x27;</s=
pan><span style=3D"color: #007700">=3D&gt;</span><span style=3D"color: #DD0=
000">&#x27;bruce&#x27;</span><span style=3D"color: #007700">);<br><br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;prepare&=
#xa0;the&#xa0;SQL&#xa0;statement&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</spa=
n><span style=3D"color: #0000BB">$stmt&#xa0;</span><span style=3D"color: #0=
07700">=3D&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span styl=
e=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">prepare</sp=
an><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">&q=
uot;SELECT&#xa0;*&#xa0;FROM&#xa0;animals&#xa0;WHERE&#xa0;animal_id&#xa0;=3D=
&#xa0;:animal_id&#xa0;AND&#xa0;animal_name&#xa0;=3D&#xa0;:animal_name&quot;=
</span><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</s=
pan><span style=3D"color: #FF8000">/***&#xa0;bind&#xa0;the&#xa0;paramaters&=
#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">=
$stmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color=
: #0000BB">bindParam</span><span style=3D"color: #007700">(</span><span sty=
le=3D"color: #DD0000">&#x27;:animal_id&#x27;</span><span style=3D"color: #0=
07700">,&#xa0;</span><span style=3D"color: #0000BB">$animal_id</span><span=
 style=3D"color: #007700">,&#xa0;</span><span style=3D"color: #0000BB">PDO<=
/span><span style=3D"color: #007700">::</span><span style=3D"color: #0000BB=
">PARAM_INT</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#=
xa0;</span><span style=3D"color: #0000BB">$stmt</span><span style=3D"color:=
 #007700">-&gt;</span><span style=3D"color: #0000BB">bindParam</span><span=
 style=3D"color: #007700">(</span><span style=3D"color: #DD0000">&#x27;:ani=
mal_name&#x27;</span><span style=3D"color: #007700">,&#xa0;</span><span sty=
le=3D"color: #0000BB">$animal_name</span><span style=3D"color: #007700">,&#=
xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"color:=
 #007700">::</span><span style=3D"color: #0000BB">PARAM_STR</span><span sty=
le=3D"color: #007700">,&#xa0;</span><span style=3D"color: #0000BB">5</span>=
<span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><sp=
an style=3D"color: #FF8000">/***&#xa0;reassign&#xa0;the&#xa0;variables&#xa0=
;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dat=
a&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;array(</span><span st=
yle=3D"color: #DD0000">&#x27;animal_id&#x27;</span><span style=3D"color: #0=
07700">=3D&gt;</span><span style=3D"color: #0000BB">3</span><span style=3D"=
color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&#x27;animal_n=
ame&#x27;&#xa0;</span><span style=3D"color: #007700">=3D&gt;&#xa0;</span><s=
pan style=3D"color: #DD0000">&#x27;bruce&#x27;</span><span style=3D"color:=
 #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #F=
F8000">/***&#xa0;execute&#xa0;the&#xa0;prepared&#xa0;statement&#xa0;***/<br=
>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</span>=
<span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">e=
xecute</span><span style=3D"color: #007700">(</span><span style=3D"color:=
 #0000BB">$data</span><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;=
&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;loop&#xa0;over&=
#xa0;the&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span sty=
le=3D"color: #007700">while(</span><span style=3D"color: #0000BB">$row&#xa0=
;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color=
: #0000BB">$stmt</span><span style=3D"color: #007700">-&gt;</span><span sty=
le=3D"color: #0000BB">fetch</span><span style=3D"color: #007700">())<br>&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row=
</span><span style=3D"color: #007700">[</span><span style=3D"color: #DD0000=
">&#x27;animal_id&#x27;</span><span style=3D"color: #007700">].</span><span=
 style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=
=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ec=
ho&#xa0;</span><span style=3D"color: #0000BB">$row</span><span style=3D"col=
or: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_type&#x27;=
</span><span style=3D"color: #007700">].</span><span style=3D"color: #DD000=
0">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span styl=
e=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[</span><spa=
n style=3D"color: #DD0000">&#x27;animal_name&#x27;</span><span style=3D"col=
or: #007700">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt=
;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #FF8000">/***&#xa0;reassign&#xa0;the&#xa0;variables&#xa0;again&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
data&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;array(</span><span=
 style=3D"color: #DD0000">&#x27;animal_id&#x27;</span><span style=3D"color:=
 #007700">=3D&gt;</span><span style=3D"color: #0000BB">4</span><span style=
=3D"color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&#x27;anim=
al_name&#x27;&#xa0;</span><span style=3D"color: #007700">=3D&gt;&#xa0;</spa=
n><span style=3D"color: #DD0000">&#x27;bruce&#x27;</span><span style=3D"col=
or: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #FF8000">/***&#xa0;execute&#xa0;the&#xa0;prepared&#xa0;statement&#xa0;***/=
<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</sp=
an><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB=
">execute</span><span style=3D"color: #007700">(</span><span style=3D"color=
: #0000BB">$data</span><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0=
;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;loop&#xa0;over=
&#xa0;the&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span st=
yle=3D"color: #007700">while(</span><span style=3D"color: #0000BB">$row&#xa=
0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"colo=
r: #0000BB">$stmt</span><span style=3D"color: #007700">-&gt;</span><span st=
yle=3D"color: #0000BB">fetch</span><span style=3D"color: #007700">())<br>&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$ro=
w</span><span style=3D"color: #007700">[</span><span style=3D"color: #DD000=
0">&#x27;animal_id&#x27;</span><span style=3D"color: #007700">].</span><spa=
n style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=
=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ec=
ho&#xa0;</span><span style=3D"color: #0000BB">$row</span><span style=3D"col=
or: #007700">[</span><span style=3D"color: #DD0000">&#x27;animal_type&#x27;=
</span><span style=3D"color: #007700">].</span><span style=3D"color: #DD000=
0">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span styl=
e=3D"color: #0000BB">$row</span><span style=3D"color: #007700">[</span><spa=
n style=3D"color: #DD0000">&#x27;animal_name&#x27;</span><span style=3D"col=
or: #007700">].</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt=
;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;}<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #FF8000">/***&#xa0;reassign&#xa0;the&#xa0;variables&#xa0;***/<br=
>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$data&#xa0;<=
/span><span style=3D"color: #007700">=3D&#xa0;array(</span><span style=3D"c=
olor: #DD0000">&#x27;animal_id&#x27;</span><span style=3D"color: #007700">=
=3D&gt;</span><span style=3D"color: #0000BB">9</span><span style=3D"color:=
 #007700">,&#xa0;</span><span style=3D"color: #DD0000">&#x27;animal_name&#x=
27;&#xa0;</span><span style=3D"color: #007700">=3D&gt;&#xa0;</span><span st=
yle=3D"color: #DD0000">&#x27;bruce&#x27;</span><span style=3D"color: #00770=
0">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">=
/***&#xa0;execute&#xa0;the&#xa0;prepared&#xa0;statement&#xa0;***/<br>&#xa0;=
&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$stmt</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">execut=
e</span><span style=3D"color: #007700">(</span><span style=3D"color: #0000B=
B">$data</span><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&=
#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;loop&#xa0;over&#xa0;th=
e&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"c=
olor: #007700">while(</span><span style=3D"color: #0000BB">$row&#xa0;</span=
><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000=
BB">$stmt</span><span style=3D"color: #007700">-&gt;</span><span style=3D"c=
olor: #0000BB">fetch</span><span style=3D"color: #007700">())<br>&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$row</span>=
<span style=3D"color: #007700">[</span><span style=3D"color: #DD0000">&#x27=
;animal_id&#x27;</span><span style=3D"color: #007700">].</span><span style=
=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"colo=
r: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;=
</span><span style=3D"color: #0000BB">$row</span><span style=3D"color: #007=
700">[</span><span style=3D"color: #DD0000">&#x27;animal_type&#x27;</span><=
span style=3D"color: #007700">].</span><span style=3D"color: #DD0000">&#x27=
;&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>&#xa0;&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=3D"col=
or: #0000BB">$row</span><span style=3D"color: #007700">[</span><span style=
=3D"color: #DD0000">&#x27;animal_name&#x27;</span><span style=3D"color: #00=
7700">];<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}<br><br><br>&#=
xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;close=
&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa=
0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span style=3D"col=
or: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">null</span><spa=
n style=3D"color: #007700">;<br>}<br>catch(</span><span style=3D"color: #00=
00BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br>&#xa0;=
&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><span style=
=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</span><sp=
an style=3D"color: #0000BB">getMessage</span><span style=3D"color: #007700"=
>();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color: #0000BB">=
?&gt;<br></span>
</span>
</code></div>

<h2><a name=3D"11" class=3D"anchor">Transactions</a></h2>
<p>
At the beginning of this tutorial was saw multiple INSERT statements to set=
 up the initial database. This works fine but is code intensive and with a=
 database like SQLite a problem arises with file locking for each access.=
 The process can be bundled into a single access by using a transaction. Tr=
ansactions are quite simple and have the benifit of rolling back changes sh=
ould an error occur, perhaps a system crash.=20
</p>
<p>
A PDO transaction begins with the with PDO::beginTransaction() method. This=
 method turns off auto-commit and any database statements or queries are no=
t committed to the database until the transaction is committed with PDO::co=
mmit. When PDO::commit is called, all statements/queries are enacted and th=
e database connection is returned to auto-commit mode.
</p>
<p>
This example shows how we might set up the animals database used in this tu=
torial.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color: #FF=
8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"colo=
r: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;<=
/span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span styl=
e=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#x=
a0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000BB">$=
username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span=
 style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"color:=
 #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&#x=
a0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&#x=
a0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"col=
or: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<br=
><br></span><span style=3D"color: #FF8000">/***&#xa0;database&#xa0;name&#xa=
0;***/<br></span><span style=3D"color: #0000BB">$dbname&#xa0;</span><span=
 style=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #DD0000">&#=
x27;animals&#x27;</span><span style=3D"color: #007700">;<br><br>try&#xa0;{<=
br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;=
</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">(</span><span=
 style=3D"color: #DD0000">&quot;mysql:host=3D</span><span style=3D"color:=
 #0000BB">$hostname</span><span style=3D"color: #DD0000">;dbname=3D</span><=
span style=3D"color: #0000BB">$dbname</span><span style=3D"color: #DD0000">=
&quot;</span><span style=3D"color: #007700">,&#xa0;</span><span style=3D"co=
lor: #0000BB">$username</span><span style=3D"color: #007700">,&#xa0;</span>=
<span style=3D"color: #0000BB">$password</span><span style=3D"color: #00770=
0">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***=
&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;have&#xa0;connected=
&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700"=
>echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;Connected&#xa0;to&#x=
a0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<b=
r><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#x=
a0;set&#xa0;the&#xa0;PDO&#xa0;error&#xa0;mode&#xa0;to&#xa0;exception&#xa0;*=
**/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</=
span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000=
BB">setAttribute</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span=
 style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"colo=
r: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span=
><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #FF8000">/***&#xa0;begin&#xa0;the&#xa0;transaction&#xa0;**=
*/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</s=
pan><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000B=
B">beginTransaction</span><span style=3D"color: #007700">();<br><br>&#xa0;&=
#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;CREATE&#xa=
0;table&#xa0;statements&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span=
 style=3D"color: #0000BB">$table&#xa0;</span><span style=3D"color: #007700"=
>=3D&#xa0;</span><span style=3D"color: #DD0000">&quot;CREATE&#xa0;TABLE&#xa=
0;animals&#xa0;(&#xa0;animal_id&#xa0;MEDIUMINT(8)&#xa0;NOT&#xa0;NULL&#xa0;A=
UTO_INCREMENT&#xa0;PRIMARY&#xa0;KEY,<br>&#xa0;&#xa0;&#xa0;&#xa0;animal_type=
&#xa0;VARCHAR(25)&#xa0;NOT&#xa0;NULL,<br>&#xa0;&#xa0;&#xa0;&#xa0;animal_nam=
e&#xa0;VARCHAR(25)&#xa0;NOT&#xa0;NULL&#xa0;<br>&#xa0;&#xa0;&#xa0;&#xa0;)&qu=
ot;</span><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;</spa=
n><span style=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">=
-&gt;</span><span style=3D"color: #0000BB">exec</span><span style=3D"color:=
 #007700">(</span><span style=3D"color: #0000BB">$table</span><span style=
=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #FF8000">/***&#xa0;&#xa0;INSERT&#xa0;statements&#xa0;***/<br>&#xa0;&#xa=
0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span style=
=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec</span><=
span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">&quot;=
INSERT&#xa0;INTO&#xa0;animals&#xa0;(animal_type,&#xa0;animal_name)&#xa0;VAL=
UES&#xa0;(&#x27;emu&#x27;,&#xa0;&#x27;bruce&#x27;)&quot;</span><span style=
=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><span st=
yle=3D"color: #0000BB">exec</span><span style=3D"color: #007700">(</span><s=
pan style=3D"color: #DD0000">&quot;INSERT&#xa0;INTO&#xa0;animals&#xa0;(anim=
al_type,&#xa0;animal_name)&#xa0;VALUES&#xa0;(&#x27;funnel&#xa0;web&#x27;,&#=
xa0;&#x27;bruce&#x27;)&quot;</span><span style=3D"color: #007700">);<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec</=
span><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">=
&quot;INSERT&#xa0;INTO&#xa0;animals&#xa0;(animal_type,&#xa0;animal_name)&#x=
a0;VALUES&#xa0;(&#x27;lizard&#x27;,&#xa0;&#x27;bruce&#x27;)&quot;</span><sp=
an style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span styl=
e=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span>=
<span style=3D"color: #0000BB">exec</span><span style=3D"color: #007700">(<=
/span><span style=3D"color: #DD0000">&quot;INSERT&#xa0;INTO&#xa0;animals&#x=
a0;(animal_type,&#xa0;animal_name)&#xa0;VALUES&#xa0;(&#x27;dingo&#x27;,&#xa=
0;&#x27;bruce&#x27;)&quot;</span><span style=3D"color: #007700">);<br>&#xa0=
;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec</=
span><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">=
&quot;INSERT&#xa0;INTO&#xa0;animals&#xa0;(animal_type,&#xa0;animal_name)&#x=
a0;VALUES&#xa0;(&#x27;kangaroo&#x27;,&#xa0;&#x27;bruce&#x27;)&quot;</span><=
span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span st=
yle=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</spa=
n><span style=3D"color: #0000BB">exec</span><span style=3D"color: #007700">=
(</span><span style=3D"color: #DD0000">&quot;INSERT&#xa0;INTO&#xa0;animals&=
#xa0;(animal_type,&#xa0;animal_name)&#xa0;VALUES&#xa0;(&#x27;wallaby&#x27;,=
&#xa0;&#x27;bruce&#x27;)&quot;</span><span style=3D"color: #007700">);<br>&=
#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><sp=
an style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec=
</span><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000=
">&quot;INSERT&#xa0;INTO&#xa0;animals&#xa0;(animal_type,&#xa0;animal_name)&=
#xa0;VALUES&#xa0;(&#x27;wombat&#x27;,&#xa0;&#x27;bruce&#x27;)&quot;</span><=
span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span st=
yle=3D"color: #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</spa=
n><span style=3D"color: #0000BB">exec</span><span style=3D"color: #007700">=
(</span><span style=3D"color: #DD0000">&quot;INSERT&#xa0;INTO&#xa0;animals&=
#xa0;(animal_type,&#xa0;animal_name)&#xa0;VALUES&#xa0;(&#x27;koala&#x27;,&#=
xa0;&#x27;bruce&#x27;)&quot;</span><span style=3D"color: #007700">);<br>&#x=
a0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span=
 style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB">exec</=
span><span style=3D"color: #007700">(</span><span style=3D"color: #DD0000">=
&quot;INSERT&#xa0;INTO&#xa0;animals&#xa0;(animal_type,&#xa0;animal_name)&#x=
a0;VALUES&#xa0;(&#x27;kiwi&#x27;,&#xa0;&#x27;bruce&#x27;)&quot;</span><span=
 style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span st=
yle=3D"color: #FF8000">/***&#xa0;commit&#xa0;the&#xa0;transaction&#xa0;***/=
<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</spa=
n><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000BB"=
>commit</span><span style=3D"color: #007700">();<br><br>&#xa0;&#xa0;&#xa0;&=
#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;echo&#xa0;a&#xa0;messa=
ge&#xa0;to&#xa0;say&#xa0;the&#xa0;database&#xa0;was&#xa0;created&#xa0;***/<=
br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #007700">echo&#xa0;=
</span><span style=3D"color: #DD0000">&#x27;Data&#xa0;entered&#xa0;successf=
ully&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"color: #007700">;<br>}<br>=
catch(</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><spa=
n style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#=
xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;roll&#xa0;back&#x=
a0;the&#xa0;transaction&#xa0;if&#xa0;we&#xa0;fail&#xa0;***/<br>&#xa0;&#xa0;=
&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh</span><span style=3D=
"color: #007700">-&gt;</span><span style=3D"color: #0000BB">rollback</span>=
<span style=3D"color: #007700">();<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><s=
pan style=3D"color: #FF8000">/***&#xa0;echo&#xa0;the&#xa0;sql&#xa0;statemen=
t&#xa0;and&#xa0;error&#xa0;message&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</s=
pan><span style=3D"color: #007700">echo&#xa0;</span><span style=3D"color:=
 #0000BB">$sql&#xa0;</span><span style=3D"color: #007700">.&#xa0;</span><sp=
an style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;&#xa0;</span><span=
 style=3D"color: #007700">.&#xa0;</span><span style=3D"color: #0000BB">$e</=
span><span style=3D"color: #007700">-&gt;</span><span style=3D"color: #0000=
BB">getMessage</span><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa=
0;&#xa0;}<br></span><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"12" class=3D"anchor">Get Last Insert Id</a></h2>
<p>
This is a common task required when you need to get the id of the last INSE=
RT. This is done with PDO::lastInserId() method as shown here.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<br><span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color:=
 #FF8000">/***&#xa0;mysql&#xa0;hostname&#xa0;***/<br></span><span style=3D"=
color: #0000BB">$hostname&#xa0;</span><span style=3D"color: #007700">=3D&#x=
a0;</span><span style=3D"color: #DD0000">&#x27;localhost&#x27;</span><span=
 style=3D"color: #007700">;<br><br></span><span style=3D"color: #FF8000">/*=
**&#xa0;mysql&#xa0;username&#xa0;***/<br></span><span style=3D"color: #0000=
BB">$username&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><s=
pan style=3D"color: #DD0000">&#x27;username&#x27;</span><span style=3D"colo=
r: #007700">;<br><br></span><span style=3D"color: #FF8000">/***&#xa0;mysql&=
#xa0;password&#xa0;***/<br></span><span style=3D"color: #0000BB">$password&=
#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=3D"c=
olor: #DD0000">&#x27;password&#x27;</span><span style=3D"color: #007700">;<=
br><br>try&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color:=
 #0000BB">$dbh&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0=
;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #007=
700">(</span><span style=3D"color: #DD0000">&quot;mysql:host=3D</span><span=
 style=3D"color: #0000BB">$hostname</span><span style=3D"color: #DD0000">;d=
bname=3Danimals&quot;</span><span style=3D"color: #007700">,&#xa0;</span><s=
pan style=3D"color: #0000BB">$username</span><span style=3D"color: #007700"=
>,&#xa0;</span><span style=3D"color: #0000BB">$password</span><span style=
=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"col=
or: #FF8000">/***&#xa0;echo&#xa0;a&#xa0;message&#xa0;saying&#xa0;we&#xa0;ha=
ve&#xa0;connected&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=
=3D"color: #007700">echo&#xa0;</span><span style=3D"color: #DD0000">&#x27;C=
onnected&#xa0;to&#xa0;database&lt;br&#xa0;/&gt;&#x27;</span><span style=3D"=
color: #007700">;<br><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"colo=
r: #FF8000">/***&#xa0;set&#xa0;the&#xa0;error&#xa0;reporting&#xa0;attribute=
&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB"=
>$dbh</span><span style=3D"color: #007700">-&gt;</span><span style=3D"color=
: #0000BB">setAttribute</span><span style=3D"color: #007700">(</span><span=
 style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">::</span=
><span style=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #0=
07700">,&#xa0;</span><span style=3D"color: #0000BB">PDO</span><span style=
=3D"color: #007700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTI=
ON</span><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;<=
/span><span style=3D"color: #FF8000">/***&#xa0;INSERT&#xa0;a&#xa0;new&#xa0;=
row&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000=
BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><span style=3D"co=
lor: #0000BB">exec</span><span style=3D"color: #007700">(</span><span style=
=3D"color: #DD0000">&quot;INSERT&#xa0;INTO&#xa0;animals(animal_type,&#xa0;a=
nimal_name)&#xa0;VALUES&#xa0;(&#x27;galah&#x27;,&#xa0;&#x27;polly&#x27;)&qu=
ot;</span><span style=3D"color: #007700">);<br><br>&#xa0;&#xa0;&#xa0;&#xa0;=
</span><span style=3D"color: #FF8000">/***&#xa0;display&#xa0;the&#xa0;id&#x=
a0;of&#xa0;the&#xa0;last&#xa0;INSERT&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;<=
/span><span style=3D"color: #007700">echo&#xa0;</span><span style=3D"color:=
 #0000BB">$dbh</span><span style=3D"color: #007700">-&gt;</span><span style=
=3D"color: #0000BB">lastInsertId</span><span style=3D"color: #007700">();<b=
r><br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#x=
a0;close&#xa0;the&#xa0;database&#xa0;connection&#xa0;***/<br>&#xa0;&#xa0;&#=
xa0;&#xa0;</span><span style=3D"color: #0000BB">$dbh&#xa0;</span><span styl=
e=3D"color: #007700">=3D&#xa0;</span><span style=3D"color: #0000BB">null</s=
pan><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(=
</span><span style=3D"color: #0000BB">PDOException&#xa0;$e</span><span styl=
e=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#=
xa0;echo&#xa0;</span><span style=3D"color: #0000BB">$e</span><span style=3D=
"color: #007700">-&gt;</span><span style=3D"color: #0000BB">getMessage</spa=
n><span style=3D"color: #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span=
><span style=3D"color: #0000BB">?&gt;<br></span>
</span>
</code></div>


<h2><a name=3D"13" class=3D"anchor">A Global Instance</a></h2>
<p>
Ever need a global instance of your database connection? Here we achieve th=
is with the use of the Singleton design patern. The goal of a singleton is=
 to ensure the class has only a single instance and provide a global point=
 of access to it. Here we use the getInstance() method to achieve this. A=
 new instance is only created the first time it is accessed and all subsequ=
ent accesses are simply returned the existing instance.
</p>
<div class=3D"codebox">
<code><span style=3D"color: #000000">
<br><span style=3D"color: #0000BB">&lt;?php<br></span><span style=3D"color:=
 #007700">class&#xa0;</span><span style=3D"color: #0000BB">db</span><span=
 style=3D"color: #007700">{<br><br></span><span style=3D"color: #FF8000">/*=
**&#xa0;Declare&#xa0;instance&#xa0;***/<br></span><span style=3D"color: #00=
7700">private&#xa0;static&#xa0;</span><span style=3D"color: #0000BB">$insta=
nce&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span style=
=3D"color: #0000BB">NULL</span><span style=3D"color: #007700">;<br><br></sp=
an><span style=3D"color: #FF8000">/**<br>*<br>*&#xa0;the&#xa0;constructor&#=
xa0;is&#xa0;set&#xa0;to&#xa0;private&#xa0;so<br>*&#xa0;so&#xa0;nobody&#xa0;=
can&#xa0;create&#xa0;a&#xa0;new&#xa0;instance&#xa0;using&#xa0;new<br>*<br>*=
/<br></span><span style=3D"color: #007700">private&#xa0;function&#xa0;</spa=
n><span style=3D"color: #0000BB">__construct</span><span style=3D"color: #0=
07700">()&#xa0;{<br>&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&=
#xa0;maybe&#xa0;set&#xa0;the&#xa0;db&#xa0;name&#xa0;here&#xa0;later&#xa0;**=
*/<br></span><span style=3D"color: #007700">}<br><br></span><span style=3D"=
color: #FF8000">/**<br>*<br>*&#xa0;Return&#xa0;DB&#xa0;instance&#xa0;or&#xa=
0;create&#xa0;intitial&#xa0;connection<br>*<br>*&#xa0;@return&#xa0;object&#=
xa0;(PDO)<br>*<br>*&#xa0;@access&#xa0;public<br>*<br>*/<br></span><span sty=
le=3D"color: #007700">public&#xa0;static&#xa0;function&#xa0;</span><span st=
yle=3D"color: #0000BB">getInstance</span><span style=3D"color: #007700">()&=
#xa0;{<br><br>if&#xa0;(!</span><span style=3D"color: #0000BB">self</span><s=
pan style=3D"color: #007700">::</span><span style=3D"color: #0000BB">$insta=
nce</span><span style=3D"color: #007700">)<br>&#xa0;&#xa0;&#xa0;&#xa0;{<br>=
&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">self</span><s=
pan style=3D"color: #007700">::</span><span style=3D"color: #0000BB">$insta=
nce&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;new&#xa0;</span><sp=
an style=3D"color: #0000BB">PDO</span><span style=3D"color: #007700">(</spa=
n><span style=3D"color: #DD0000">&quot;mysql:host=3D&#x27;localhost&#x27;;d=
bname=3D&#x27;animals&#x27;&quot;</span><span style=3D"color: #007700">,&#x=
a0;</span><span style=3D"color: #DD0000">&#x27;username&#x27;</span><span=
 style=3D"color: #007700">,&#xa0;</span><span style=3D"color: #DD0000">&#x2=
7;password&#x27;</span><span style=3D"color: #007700">);<br>&#xa0;&#xa0;&#x=
a0;&#xa0;</span><span style=3D"color: #0000BB">self</span><span style=3D"co=
lor: #007700">::</span><span style=3D"color: #0000BB">$instance</span><span=
 style=3D"color: #007700">-&gt;&#xa0;</span><span style=3D"color: #0000BB">=
setAttribute</span><span style=3D"color: #007700">(</span><span style=3D"co=
lor: #0000BB">PDO</span><span style=3D"color: #007700">::</span><span style=
=3D"color: #0000BB">ATTR_ERRMODE</span><span style=3D"color: #007700">,&#xa=
0;</span><span style=3D"color: #0000BB">PDO</span><span style=3D"color: #00=
7700">::</span><span style=3D"color: #0000BB">ERRMODE_EXCEPTION</span><span=
 style=3D"color: #007700">);<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>return&#xa0;</=
span><span style=3D"color: #0000BB">self</span><span style=3D"color: #00770=
0">::</span><span style=3D"color: #0000BB">$instance</span><span style=3D"c=
olor: #007700">;<br>}<br><br></span><span style=3D"color: #FF8000">/**<br>*=
<br>*&#xa0;Like&#xa0;the&#xa0;constructor,&#xa0;we&#xa0;make&#xa0;__clone&#=
xa0;private<br>*&#xa0;so&#xa0;nobody&#xa0;can&#xa0;clone&#xa0;the&#xa0;inst=
ance<br>*<br>*/<br></span><span style=3D"color: #007700">private&#xa0;funct=
ion&#xa0;</span><span style=3D"color: #0000BB">__clone</span><span style=3D=
"color: #007700">(){<br>}<br><br>}&#xa0;</span><span style=3D"color: #FF800=
0">/***&#xa0;end&#xa0;of&#xa0;class&#xa0;***/<br><br></span><span style=3D"=
color: #007700">try&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;</s=
pan><span style=3D"color: #FF8000">/***&#xa0;query&#xa0;the&#xa0;database&#=
xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #0000BB">$=
result&#xa0;</span><span style=3D"color: #007700">=3D&#xa0;</span><span sty=
le=3D"color: #0000BB">DB</span><span style=3D"color: #007700">::</span><spa=
n style=3D"color: #0000BB">getInstance</span><span style=3D"color: #007700"=
>()-&gt;</span><span style=3D"color: #0000BB">query</span><span style=3D"co=
lor: #007700">(</span><span style=3D"color: #DD0000">&quot;SELECT&#xa0;*&#x=
a0;FROM&#xa0;animals&quot;</span><span style=3D"color: #007700">);<br><br>&=
#xa0;&#xa0;&#xa0;&#xa0;</span><span style=3D"color: #FF8000">/***&#xa0;loop=
&#xa0;over&#xa0;the&#xa0;results&#xa0;***/<br>&#xa0;&#xa0;&#xa0;&#xa0;</spa=
n><span style=3D"color: #007700">foreach(</span><span style=3D"color: #0000=
BB">$result&#xa0;</span><span style=3D"color: #007700">as&#xa0;</span><span=
 style=3D"color: #0000BB">$row</span><span style=3D"color: #007700">)<br>&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;print&#xa0;</span><span style=3D"color: #0000BB">$r=
ow</span><span style=3D"color: #007700">[</span><span style=3D"color: #DD00=
00">&#x27;animal_type&#x27;</span><span style=3D"color: #007700">]&#xa0;.</=
span><span style=3D"color: #DD0000">&#x27;&#xa0;-&#xa0;&#x27;</span><span=
 style=3D"color: #007700">.&#xa0;</span><span style=3D"color: #0000BB">$row=
</span><span style=3D"color: #007700">[</span><span style=3D"color: #DD0000=
">&#x27;animal_name&#x27;</span><span style=3D"color: #007700">]&#xa0;.&#xa=
0;</span><span style=3D"color: #DD0000">&#x27;&lt;br&#xa0;/&gt;&#x27;</span=
><span style=3D"color: #007700">;<br>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;}<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br>catch(</span><span style=3D"col=
or: #0000BB">PDOException&#xa0;$e</span><span style=3D"color: #007700">)<br=
>&#xa0;&#xa0;&#xa0;&#xa0;{<br>&#xa0;&#xa0;&#xa0;&#xa0;echo&#xa0;</span><spa=
n style=3D"color: #0000BB">$e</span><span style=3D"color: #007700">-&gt;</s=
pan><span style=3D"color: #0000BB">getMessage</span><span style=3D"color:=
 #007700">();<br>&#xa0;&#xa0;&#xa0;&#xa0;}<br></span><span style=3D"color:=
 #0000BB">?&gt;</span>
</span>
</code></div>
<p>
The above code will produce a result like this:
</p><div class=3D"displaybox">
emu - bruce<br>
funnel web - bruce<br>
lizard - bruce<br>
dingo - bruce<br>
kangaroo - bruce<br>
wallaby - bruce<br>
wombat - bruce<br>
koala - bruce
</div>
<p>
This method of access saves the overhead created when a new instance of an=
 object is called each time it is referenced, so you have have few referenc=
es to it. Also, if you wish to pass the objects state from one reference to=
 another there is no need to create from the initial state.
</p>
<p>
Note that the constructor and clone methods have been made private to ensur=
e that an instance of the class cannot be instantiated or cloned.
</p>



<a name=3D"50" class=3D"anchor"><h2>Conclusions.</h2></a>
<p>
If you have got this far you will have seen how to create a connection, pre=
pare a statement and exceute,=20
and to bind Params using bindParam(). This is what most folks will be using=
 to begin with and shows the
effectiveness of using PDO to make code more portable. We highly recommend=
 you visit <a href=3D"http://www.php.net/manual/en/ref.pdo.php">
http://www.php.net/manual/en/ref.pdo.php</a> and read up on all that PDO ha=
s to offer.=20

</p>



</div>
<!--content ends -->
</div>

<div id=3D"right">

</div>

</div>
<!--content ends -->

<!--footer starts -->
<div id=3D"footer">
<div style=3D"margin-left:20px">
<hr>
I would rather see a sermon than hear one any day. I&#x27;d rather have you=
 walk with me, than merely point the way. The eye is a more ready pupil tha=
n ever was the ear, good advice is often confusing, but example is always=
 clear.
</div>


<ul>
<li><a href=3D"/">Home</a></li>
<li><a href=3D"/tutorials">Tutorials</a></li>
<li><a href=3D"/articles">Articles</a></li>
<li><a href=3D"/examples">Examples</a></li>
<li><a href=3D"/classes">Classes</a></li>
<li><a href=3D"/contact">Contact Us</a></li>
</ul>
<p class=3D"copyright">
PHPRO.ORG Tutorials Articles Examples<br>
Copyright 2008 PHPRO.ORG. All Rights Reserved. <a href=3D"http://bangasanga=
.com">Banga Sanga</a>
</p>
<p>&#xa0;</p>

</div>
<!--footer ends -->
<!--container ends -->
</div>










</body></html>
------=_Part_38EB0EE_729951D.1372845750840
Content-Location: http://www.phpro.org/css/style.css
Content-Transfer-Encoding: quoted-printable
Content-Type: text/css

/* reset*/
body,h1,h2,h3,h4,h5,h6,p,form,fieldset {
	margin:0;
	padding:0;
}

body {=20
	background-image:url('/images/background.gif');
	background-repeat:repeat-x;
	font-family:arial, sans-serif;
	line-height:20px;
	text-align:center;
	font-size:12px;
}



p {=20
	padding-bottom:15px;
	color:#70706B;
}

li {
	color:#70706B;
}

img {
	border:none;
}

a:link {
	color: #D33301;
	text-decoration:underline;
}   =20
a:visited {
	color: #FE5E03;
	text-decoration:none;
} =20
a:hover {
	color:#FE5E03;
	text-decoration: none;
}  =20
a:active {
	color: #C40605;
	text-decoration:none;
}  =20

h1 {=20
	font-family:Arial, sans-serif;
	font-weight:normal;
	color:#DD4F09;
	font-size:18px;
	font-weight:400;
	padding-bottom:25px;
}

#left {=20
	float:left;
	width:640px;
	padding-right:20px;
	border-right:1px solid #D6D2CF;
}

#right {=20
	float:right;
	width:240px;
}

#download li {=20
	color:#FB9A0A;
}

#container {
	margin-left:auto;
	margin-right:auto;
	width:930px;
	text-align:left;
}


#navigation {
	clear:both;
	padding-top:7px;
	*padding-top:3px;
	_padding-top:5px;
 }

#navigation ul {
	float:right;
	margin:0px;
	padding:0px;
}=20

#navigation li {
	line-height:35px;
	font-size:14px;
	float:left;
	list-style:none;
	padding-left:10px;
	padding-right:10px;
	border-right:1px solid #BD1900;
	*height:34px;
	display:block;
}=20

#navigation li a:link {
	display:block;
	color: #fff;
	text-decoration:none;
}   =20

#navigation li a:visited {color: #fff;
text-decoration:none;
} =20

#navigation li a:hover {color:#fff;
	display:block;
	text-decoration: none;
	background-image:url('/images/nav-hover.gif');
	background-position:bottom center;
	background-repeat:no-repeat;
	color:#FEE6C8;
}  =20

.nav-current {
	color:#fff;
	display:block;
	text-decoration: none;
	background-image:url('/images/nav-hover.gif');
	background-position:bottom center;
	background-repeat:no-repeat;
	color:#FEE6C8;}

#logo {=20
	margin-top:52px;
}

#login {=20
	float:right;
	height: 28px;
}

td.login_button {
	width: 80px;
}

img.login_button {
	border: 0;
	cursor: pointer; /* hand-shaped cursor */
	cursor: hand; /* IE 5.x */
}

#logged_in_panel {
	padding-top: 5px;
}

#signup_panel table {
	font-size: 11px;
	margin: 0px;
	padding: 0px
}

#signup_panel table input {
	font-size: 11px;
	width: 120px;
}

#login p {
	padding-top:5px;
	padding-bottom:3px;
	*padding-bottom:5px;
}

.messages {
	color:#DD4F09;
	font-weight: bold;
	width: 80px;
}

#content {=20
	clear:both;
	padding-top:40px;
	*padding-top:20px;
}



#content ul {
	list-style-type: none;
	padding: 0;
	margin: 0;
}

#content ul li {=20
	margin-left:15px;
	padding-left:25px;
	background-image:url('/images/arrow-icon.jpg');
	background-repeat:no-repeat;
	background-position:center left;
	padding-top:2px;
	text-indent:10px;
}

.arrow-first {=20
	background-image:url('/images/arrow-icon.jpg');
	background-repeat:no-repeat;
	background-position:center left;
	padding-left:25px;
}

#blog {=20
	clear:both;
	padding-top:20px;
}

#blog h2 {
	font-size:18px;
	margin-bottom:15px;
	color:#D33301;
	font-weight:normal;
}=20

#footer {=20
	clear:both;
	padding-top:20px;
}

#footer ul {=20
	margin:0px;
	padding:0px;
	# border-top:1px solid #D6D2CF;
	padding-top:20px;
}

#footer li{
	margin-bottom:15px;
	list-style-type:none;
	float:left;
	padding-right:20px;
 }
=20
 #footer p {=20
	 clear:both;
 }
=20
.orange {=20
	color:#CA2901;
	font-size:14px;
}

h2 {
	font-size:18px;
	margin-bottom:10px;
	color:#D33301;
	font-weight:normal;
}


h3 {
	font-size:15px;
	margin-bottom:10px;
	color:#D33301;
	font-weight:normal;}

.copyright {
	font-size:10px;
}

ol {
	color:#70706B;
	padding:0px;
	margin:0px;
	padding-bottom:15px;
}=20

ol li {
	padding-bottom:10px;
	padding-left:10px;
}

#install_popup {
	color: #000;
	position: absolute;
	background-color: #fff;
	top: 100px;
	left: 100px;
	border: solid 2px #000;
	padding: 10px;
}

#install_popup p {
	color: #000;
}

.tablep {=20
	font-size:12px;
}

.privacy-table {=20
	margin-left:30px;
	margin-top:20px;
	font-size:12px;
}

.privacy-tablep {
	width:190px;
	margin-left:45px;
}

.tableinfo {
	font-size:12px;
 }

#privacy {=20
	background-image:url(/images/tough-privacy-background.gif);
	background-repeat:no-repeat;
}


#technology-block {
	background-image:url(images/technology-background-block.gif);
	background-repeat:no-repeat;
}

.technology-text {=20
	font-size:11px;
	padding-left:10px;
	padding-right:30px;
}

#right-content {
	padding-left:10px;
	float:left;
	width:240px;
 }
=20
#right-content ul {=20
	padding:0px;
	padding-left:15px;
	margin:0px;
}
=20
 .click-block {=20
 margin-top:15px;
 background-image:url(/images/click-block-background.jpg);
 background-repeat:no-repeat;
 color:#FFFFFF;
 padding-left:10px;
 padding-right:15px;
 padding-top:5px;
 }
=20
  .click-block a:link {=20
   color:#FFFFFF;}

   .click-block a:visited {
    color:#FFFFFF;
   }=20
  =20
.blog {
	margin-top:20px;
}

.displaybox {
        background-color:       #f4f4f4;
        margin:                 5px 5px;
        padding:                10px;
        border:                 1px solid #d6cfb5;
	overflow:: auto;
}


div.codebox{
	margin: 5px 5px;
	padding: 10px;
	background-color: #FFFAF0;
	border:1px solid #d6cfb5;
	overflow: auto;
}

.textfield {
	font:13px/20px verdana, arial, helvetica, sans-serif;
	color:#333 ;
	margin:3px;
	height:20px;
	border:solid 0 #fff;
	padding: 3px 8px;
	background: transparent url("/images/textfield_bg.gif") no-repeat fixed;
	/* width:200px; */
	voice-family: "\"}\"";
	voice-family:inherit;
	width:200px;
}
fieldset>input.textfield {
	background: transparent url("/images/textfield_bg.gif") no-repeat;
}

.formfield{
        font:13px/20px verdana, arial, helvetica, sans-serif;
        color:#333 ;
        margin:3px;
        border:solid 0 #fff;
        padding: 3px 8px;
        voice-family: "\"}\"";
        voice-family:inherit;
        width:200px;
}

textarea {
	font:13px/20px verdana, arial, helvetica, sans-serif;
	color:#333 ;
	margin:3px;
	height:165px;
	border:solid 0 #fff;
	padding: 0 8px;
	// background: transparent url("/images/textarea_bg.gif") no-repeat fixed;
	/* width:200px; */
	voice-family: "\"}\"";
	voice-family:inherit;
	width:500px;
}

fieldset>textarea {
	// background: transparent url("/images/textarea_bg.gif") no-repeat;
	width: 500px;
}

.submit {
	margin:3px;
	background: transparent url("/images/submit.gif") no-repeat;
	height:20px;
	border:solid 0 #fff;
	width:80px;
	font:13px/20px verdana, arial, helvetica, sans-serif;
	color:#666;
}

fieldset {
background-color: #faf8dc;
        margin: 0 0 2em 0;
        padding: 1em .5em .5em .5em;
        border: 1px solid black;
}

legend {
        padding: .2em;
        background-color: #DD4F09;
        font-weight: bold;
        color: #ffffff;
        border: 1px solid #000000;
}

#poll {
	border: solid 1px #f70000;
	padding:6px;
	width:200px;
}

.click_me {
	font-size=3Dx-large;
}

.votes {
	text-align: center;
}
.poll_results {
	font-size:120%;
}

.pastebin_container {
	width: 500px;
}

.poll_message {
	color:black;
}

.pastebin_container fieldset {
	width: 500px;
}

.pastebin_container textarea {
        width: 500px;
}

.pastebin_url {
        background-color:       #FFFAF0;
	color :black;
        margin:                 5px 5px;
        padding:                10px;
        border:                 1px solid #d6cfb5;
	font-size:150%=09
}

.pastebin_url a {
	color: black;
}

.displaybox ul {
	padding: 0px;
	margin:0px;
}
.displaybox li {
	padding:1px;
	margin:1px;
}
.displaybox li:hover{
	background-color:#FFFAF0;
}

.surname {
	display:none;
}

.main_heading {
	color:black;
	font-size:170%;
}

.soc_net ul {
	text-decoration: none;
	list-style:none;
}

li.socnet{
	display:block;
	/* background-image:url('/images/digg.gif'); */
	/* background-position:bottom center;*/
        /* background-repeat:no-repeat; */
}

dt {
        font-size:15px;
        margin-bottom:10px;
        color:#D33301;
        font-weight:normal;
}

table thead tr td {
	font-weight: bold;
}

.tute_table tbody tr td{
	padding:6px;
	border: solid 1px black;
	text-align:right;
}

pre {
	overflow:auto;
}

.codechar {
	color: red;
	font-weight: bold;
}

.signature {
	font-style: italic;
}

------=_Part_38EB0EE_729951D.1372845750840
Content-Location: http://www.phpro.org/favicon.ico
Content-Transfer-Encoding: base64
Content-Type: text/plain;
	charset="UTF-8"

AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA/wAA//8AAP8AAP//AAD/AAAA/wD/AFVVVQAAAH8AAH9/AAB/AAB/fwAA
fwAAAH8AfwCgoKAAAAAzAAAAZgAAAJkAAADMAAAA/wAAMwAAADMzAAAzZgAAM5kAADPMAAAz/wAA
ZgAAAGYzAABmZgAAZpkAAGbMAABm/wAAmQAAAJkzAACZZgAAmZkAAJnMAACZ/wAAzAAAAMwzAADM
ZgAAzJkAAMzMAADM/wAA/wAAAP8zAAD/ZgAA/5kAAP/MAAD//wAzAAAAMwAzADMAZgAzAJkAMwDM
ADMA/wAzMwAAMzMzADMzZgAzM5kAMzPMADMz/wAzZgAAM2YzADNmZgAzZpkAM2bMADNm/wAzmQAA
M5kzADOZZgAzmZkAM5nMADOZ/wAzzAAAM8wzADPMZgAzzJkAM8zMADPM/wAz/wAAM/8zADP/ZgAz
/5kAM//MADP//wBmAAAAZgAzAGYAZgBmAJkAZgDMAGYA/wBmMwAAZjMzAGYzZgBmM5kAZjPMAGYz
/wBmZgAAZmYzAGZmZgBmZpkAZmbMAGZm/wBmmQAAZpkzAGaZZgBmmZkAZpnMAGaZ/wBmzAAAZswz
AGbMZgBmzJkAZszMAGbM/wBm/wAAZv8zAGb/ZgBm/5kAZv/MAGb//wCZAAAAmQAzAJkAZgCZAJkA
mQDMAJkA/wCZMwAAmTMzAJkzZgCZM5kAmTPMAJkz/wCZZgAAmWYzAJlmZgCZZpkAmWbMAJlm/wCZ
mQAAmZkzAJmZZgCZmZkAmZnMAJmZ/wCZzAAAmcwzAJnMZgCZzJkAmczMAJnM/wCZ/wAAmf8zAJn/
ZgCZ/5kAmf/MAJn//wDMAAAAzAAzAMwAZgDMAJkAzADMAMwA/wDMMwAAzDMzAMwzZgDMM5kAzDPM
AMwz/wDMZgAAzGYzAMxmZgDMZpkAzGbMAMxm/wDMmQAAzJkzAMyZZgDMmZkAzJnMAMyZ/wDMzAAA
zMwzAMzMZgDMzJkAzMzMAMzM/wDM/wAAzP8zAMz/ZgDM/5kAzP/MAMz//wD/AAAA/wAzAP8AZgD/
AJkA/wDMAP8A/wD/MwAA/zMzAP8zZgD/M5kA/zPMAP8z/wD/ZgAA/2YzAP9mZgD/ZpkA/2bMAP9m
/wD/mQAA/5kzAP+ZZgD/mZkA/5nMAP+Z/wD/zAAA/8wzAP/MZgD/zJkA/8zMAP/M/wD//wAA//8z
AP//ZgD//5kA///MANL6+gCz3vUAqujuAIe43gCMtNIAj4+8ANi/2AC0gkYAqs1mAIuLAAAZGRkA
MjIyAEtLSwBkZGQAfX19AJaWlgCvr68AyMjIAOHh4QB/f/8Af///AH//fwD//38A/39/AP9//wD/
//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPX19fUAAAAAAAAAAAAAAAEBAQEB9QAAAAAAAAAAAAEA
AAAAAAH1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD19fX1AAAAAPX19fUA
AAABAQEBAfUAAAEBAQEB9QABAQEBAQEB9QEBAQEBAQH1AQEBAQEBAfUBAQEBAQEB9QH//wEBAQEB
Af//AQEBAfUBAQEBAQEBAAEBAQEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9QAAAAAAAAAA
AAAAAAH1AQH1AAAAAAAAAAAAAAABAQEBAfUAAAAAAP//AAD8PwAA+B8AAPfPAAD//wAA//8AAMPD
AACBgQAAAAAAAAAAAAAAAAAAAQAAAP//AAD+fwAA+D8AAPgfAAA=

------=_Part_38EB0EE_729951D.1372845750840
Content-Location: http://www.phpro.org/images/background.gif
Content-Transfer-Encoding: base64
Content-Type: image/gif

R0lGODlhDgByAMQAANY6AuVfDuVgDtQ1AdxOEN9UD9U3AeBWD9M0Ad5SD+JbDtY5AtxMEN1QENc8
AuNcDv79/eFYD+JZD+ReDuReD+VhDtMzAfPv7P///wAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAA
AAAALAAAAAAOAHIAAAW44CWOZGmeaKqubOu+cCzPdG3feK7vfO+vkKBwOKwYj8ikcslsOp9IgXRK
pQau2Gx2wqVQuODwY0wulxXotFotabvf74h8Tqcf7vh8vsDv+/0JgYKDgw2Gh4iIBIuMjY0MkJGS
kg6VlpeXAJqbnJwLn6ChoQakpaamA6mqq6sIrq+wsBaztLW2t7i5uru8vb6/wMHCFhjFxsfIycrL
zM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXYIQA7

------=_Part_38EB0EE_729951D.1372845750840
Content-Location: http://www.phpro.org/images/arrow-icon.jpg
Content-Transfer-Encoding: base64
Content-Type: image/jpeg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAUAAA/+4AJkFkb2JlAGTAAAAAAQMA
FQQDBgoNAAACNgAAAsgAAANoAAAEKP/bAIQAAgICAgICAgICAgMCAgIDBAMCAgMEBQQEBAQEBQYF
BQUFBQUGBgcHCAcHBgkJCgoJCQwMDAwMDAwMDAwMDAwMDAEDAwMFBAUJBgYJDQsJCw0PDg4ODg8P
DAwMDAwPDwwMDAwMDA8MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8IAEQgAEgASAwERAAIR
AQMRAf/EAMIAAAIDAAAAAAAAAAAAAAAAAAUGBAcIAQADAAMAAAAAAAAAAAAAAAAEBQcCAwYQAAED
AgUFAAAAAAAAAAAAAAMAAgQBBRETMxQGEDEyNRYRAAADBQQFDQAAAAAAAAAAAAECAwARMhMEMVGB
NPBhEoIzQZGhsdFCYiNDgxQ1RRIAAgECBgMAAAAAAAAAAAAAAAEREDHwIUFhgQIyQoITAAECBAYC
AwEAAAAAAAAAAAEAEfAhMWEQQVFxgZHB0aHh8bH/2gAMAwEAAhEDEQAAAZ01rQvSQbKEXGGR8gSo
F797MVogjPcvVTT/2gAIAQEAAQUCjil325S4cq3n+hu64xcGW298m5cS9rLKuVe8Dqr/2gAIAQIA
AQUCbRx3vY5ld0RAwaSQfMWCP506f//aAAgBAwABBQJ7mxxjI0lNmJTR1IKHByFjRQtJ3Zf/2gAI
AQICBj8C3IZclkUdNLY4P//aAAgBAwIGPwKdET1LbjXUlvOivzT38sfR/9oACAEBAQY/AgSMttVV
VtmmKWPKUTO6GFGqSMgqW/rAWz6nBkRcnbrtakXrVRSpqebNeD3eUcADnb49OgCFGQzyGMACqbHu
4NAaGZu3tXZXiDlYd7xX62JBb6kOLfh/T6ew3//aAAgBAQMBPyF9BQEO45hQNEWacshGikRcL2a5
xXIPYJ4RMAM7kgEWnvEAZ6VuRXpQ/jdQXTi3LosPLBf/2gAIAQIDAT8hbLzPXtMpYq6o33vdM0pn
/hWRS+cFpxFdVVhv/9oACAEDAwE/IWMFCly3lO8cKxrDa1EBpyWbsIdUPr75V6y66AtpZVPFcF//
2gAMAwEAAhEDEQAAEHt6Ib//2gAIAQEDAT8QDdLQyAHCaDYBpJME9kgIEBGUyWRCoFuVY9sTNMKk
0kDMzQQL6V2AbC5rORUEsY5IQyCyf6YL/9oACAECAwE/EHJe6eiQLLCTDRHZAIcHMXC9tGkGq6Mb
Zg8HlkFoCBLhwD9Nhyn6ZPx6Xc7eYHdUqc05wv8A/9oACAEDAwE/EDFi0YA7Adc1HM7oaFPDEZGx
Xr4V0jsXl/OiX0Ac7KeIBiASBs39cAKq0r203supXQ/Erin4Xw//2Q==

------=_Part_38EB0EE_729951D.1372845750840--
