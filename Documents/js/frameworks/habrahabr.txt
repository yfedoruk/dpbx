> Конечно не совсем корректно сравнивать эти фреймворки

Я бы сказал — совсем некорректно. derby.js и meteor.js — вполне возможно, они, по сути, конкуренты, при этом качественные и каждый со своей идеологией.

А вот Angular.js + Express.js ну просто нельзя добавлять в эту таблицу в таком виде. Создается ощущение, что это решение явно хуже других двух, а это далеко не так. Очень много упирается во вкус разработчика и необходимую ему гибкость.

Сравнивать full-stack-фреймворки с клиентским фреймворком ну просто нельзя. Что касается Express.js — тут даже сам автор пишет: «Keep in mind that the goal of Express is to aid you with HTTP, not to become a framework super-power like Rails». 

Так что получается сравнение технологий разного уровня абстракции и с разным количеством фич, возможно, решающие разные задачи.

P. S. Похожая история со сравнением Backbone.js, Angular.js и подобных. Рано или поздно всплывает мнение, что первый ведет к утечкам памяти и нужно приложить немало усилий, чтобы решить эту проблему. Но тому, кто имел со всем этим дело, очевидно, что так сравнивать нельзя, ведь Backbone обязательно использовать с Marionette/Thorax/Chaplin. И кто-то хочет решений «все-в-одном», а для кого-то (для меня в том числе) преимущество Backbone в его гибкости. То же самое — сравнивать Express.js с full-stack-фреймворком на сервере.